<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

using System.ServiceModel.DomainServices.EntityFramework;
using System.ServiceModel.DomainServices.Hosting;
using <#= Model.Namespace #>.Models;

namespace <#= Model.Namespace #>.Services
{ 
    [EnableClientAccess]
    public partial class <#= Model.DbDomainService #> : DbDomainService<<#= Model.DbContextType #>>
    {
        #region Scaffolded CRUD for <#= Model.EntityTypeName #>

        public IQueryable<<#= Model.EntityTypeName #>> Get<#= Model.EntityTypeNamePluralized #>()
        {
            return this.DbContext.Set<<#= Model.EntityTypeName #>>();
			/* Add optional Includes
			.Include("relatedEntityName");
			*/
        }

        public void Insert<#= Model.EntityTypeName #>(<#= Model.EntityTypeName #> entity)
        {
            this.DbContext.Insert(entity);
        }

        public void Update<#= Model.EntityTypeName #>(<#= Model.EntityTypeName #> current)
        {
            this.DbContext.Update(current);
        }

        public void Delete<#= Model.EntityTypeName #>(<#= Model.EntityTypeName #> entity)
        {
            this.DbContext.Delete(entity);
        }

        #endregion Scaffolded CRUD for <#= Model.EntityTypeName #>
	}
}