@model OSBLE.Models.RegisterModel

@using OSBLE.Models

@{
    Layout = "~/Views/Shared/_LogOn.cshtml";
    ViewBag.Title = "Register";
}

<h2>Create a New Account @Helpers.CreateToolTip(ToolTips.AccountRegisterLogin) </h2>

<!--
<p>
    Use the form below to create a new account.
</p>
<p>
    Passwords are required to be a minimum of @Membership.MinRequiredPasswordLength characters in length.
</p>
-->

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
    <div class="row" id="login_form">
        <div class="col-xs-10 col-xs-offset-1 col-sm-6 col-sm-offset-3 col-md-8 col-md-offset-2">

            <h3>Login Information</h3>

            <div class="editor-label">
                @Html.LabelFor(m => m.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email, new { tabindex = "1", @class = "form-control" })<br />
                @Html.ValidationMessageFor(m => m.Email)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmEmail)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.ConfirmEmail, new { tabindex = "2", @class = "form-control" })<br />
                @Html.ValidationMessageFor(m => m.ConfirmEmail)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Password, new { tabindex = "3", @class = "form-control" })<br />
                @Html.ValidationMessageFor(m => m.Password)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword, new { tabindex = "4", @class = "form-control" })<br />
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>


            <h3>Identification</h3>

            <div class="editor-label">      <!-- First Name -->
                @Html.LabelFor(m => m.FirstName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.FirstName, new { tabindex = "5", @class = "form-control" })<br />
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
            <div class="editor-label">      <!-- Last Name -->
                @Html.LabelFor(m => m.LastName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.LastName, new { tabindex = "6", @class = "form-control" })<br />
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
            <div class="editor-label">      <!-- Last Name Confirmation -->
                @Html.LabelFor(m => m.ConfirmLastName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.ConfirmLastName, new { tabindex = "7", @class = "form-control" })<br />
                @Html.ValidationMessageFor(m => m.ConfirmLastName)
            </div>
            <div class="editor-label">      <!-- First Name Confirmation -->
                @Html.LabelFor(m => m.ConfirmFirstName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.ConfirmFirstName, new { tabindex = "8", @class = "form-control" })<br />
                @Html.ValidationMessageFor(m => m.ConfirmFirstName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Identification, "Company Name")
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Identification, new { tabindex = "9", @class = "form-control" })<br />
                @Html.ValidationMessageFor(m => m.Identification)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmIdentification, "Confirm Company Name")
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.ConfirmIdentification, new { tabindex = "10", @class = "form-control" })<br />
                @Html.ValidationMessageFor(m => m.ConfirmIdentification)
            </div>

            <div>
                <!-- recaptcha previously went here -->
            </div>

            <p>
                <input type="submit" class="btn btn-default" value="Register" tabindex="11" />
            </p>
        </div>
    </div>
}
