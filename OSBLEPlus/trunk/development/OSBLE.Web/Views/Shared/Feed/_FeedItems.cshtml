@using OSBLE.Areas.AssignmentDetails.Models.HeaderBuilder
@using OSBLE.Models.Users
@using OSBLEPlus.Logic.DomainObjects.ActivityFeeds
@using OSBLE.Models.Courses;
@using OSBLE.Models;
@using OSBLEPlus.Logic.Utility
@{
    bool isComment = ViewBag.IsComment ?? false;
    bool showDetails = ViewBag.ShowDetails ?? false;
    int genericComponent = (int)VsComponent.GenericComponent;
    string detailsLink = ViewBag.DetailsLink ?? "'/Feed/Details/' + idString";
    detailsLink += "+'?component='+" + genericComponent;
}

<div data-bind="if: show"> @* prevents deleted items from displaying *@
    <article data-bind="attr: { id: 'feed-item-' + eventId }, data: {id: eventId}" class="dp_post panel panel-default">

        @* Header Content *@
        <div class="dp_post_header panel-heading">
            @* Display Picture *@
            <div data-bind="if: options.showPicture">
                <img data-bind="attr: {src: '/user/' + senderId + '/Picture?size=52'}" class="profile_picture" title="profile image" alt="profile image" />
            </div>

            @* Button Controls *@
            <div class="dp_tools">
                @* Mail Button *@
                <div data-bind="if: options.canMail">
                    <a title="Mail This User" data-bind="attr: {href: '/Mail/CreateUser/' + senderId + '?component=' + @genericComponent}"><span class="glyphicon glyphicon-envelope"></span></a>
                </div>

                @* Delete Button *@
                <div data-bind="if: options.canDelete">
                    <a title="Delete this post" data-bind="click: Delete"><span class="glyphicon glyphicon-trash"></span></a>
                </div>

                @* Edit Button *@
                <div data-bind="if: options.canEdit">
                    <a title="Edit this post" data-bind="click: ShowEditBox, attr: {id: 'btn-edit-' + eventId}"><span class="glyphicon glyphicon-pencil"></span></a>
                </div>
            </div>

            @* Display Name & Date/Time*@
            <a class="display_name" data-bind="text: senderName, attr: {href: '/Profile/Index/' + senderId}"></a>
            <span class="utc-time feed-item-date" data-bind="text: timeString(), attr: {datetime: time()}"></span>
        </div>

        @* Body Content *@
        <div class="dp_content" data-bind="html: htmlContent(), attr: {id: 'feed-item-content-' + eventId}">
            @* Content here will be by knockout *@
        </div>

        @* Edit Content Form *@
        <div data-bind="if: options.canEdit">
            <form class="feed-edit-form" data-bind="attr: {id: 'feed-edit-' + eventId}">
                <textarea class="form-control" data-bind="value: content, attr: {id: 'feed-edit-textbox-' + eventId}"></textarea>
                <input name="response-submit" class="btn btn-default btn-sm" type="button" value="Save" data-bind="click: Edit" />
                <input name="response-cancel" class="btn btn-default btn-sm" type="reset" value="Cancel" data-bind="click: HideEditBox" />
            </form>
        </div>

        @if (!isComment)
        {
            @* Comments: Recursively render this view for comments. Comments are stored in the Knockout ViewModel as the same class as
                normal events, so it will parse the values for the comment objs when rendering this recursive partial view *@
            ViewBag.IsComment = true;
            <div class="feed-item-comments panel-group" data-bind="attr: {id: 'feed-item-comments-' + eventId}, foreach: comments()">
                @Html.Partial("Feed/_FeedItems")
            </div>

            @* Footer Content *@
            <div class="feed-item-footer">

                @* Reply Form (Hidden by default. Only shows when user clicks reply) *@
                <form class="feed-reply-form" data-bind="attr: {id: 'feed-reply-' + eventId}">
                    <textarea class="form-control feed-reply-textbox" placeholder="Say something..." data-bind="attr: {id: 'feed-reply-textbox-' + eventId}"></textarea>
                    <input name="response-submit" class="btn btn-default btn-sm" type="button" value="Send" data-bind="click: AddComment" />
                    <input name="response-cancel" class="btn btn-default btn-sm" type="reset" value="Cancel" data-bind="click: HideReplyBox" />
                </form>

                @* Footer Links *@
                <ul class="feed-item-links">
                    @* Don't show "details" or "View Conversation link if we're on the details page *@
                    @if (!showDetails) 
                    {
                        @* View Conversation Link *@
                        <li>
                            <a data-bind="attr: {id: 'expand-comments-' + eventId}, click: expandComments" class="anchor-pointer" >
                                <span data-bind="attr: {id: 'expand-comments-text-' + eventId}">View</span> Conversation(<span data-bind="text: comments().length"></span>)
                            </a>
                        </li>
                        
                        @* Details Link *@
                        <li><a data-bind="attr: {href: @detailsLink}">Details</a></li>
                    }

                    @* Reply Link *@
                    <li><a data-bind="attr: {id: 'btn-reply-' + eventId}, click: ShowReplyBox">Reply</a></li>
                </ul>
            </div>
        }
    </article>
</div>
@*
                    @foreach (AggregateFeedItem item in Model)
                {
                    int lastLogId = item.Items.Select(m => m.Event.EventLogId).Max();
                    List<int> eventLogIds = item.Items.Select(i => i.Event.EventLogId).ToList();
                    bool isSubscribed = false;
                    bool isComment = item.FeedItemType.Replace(" ", "") == "LogCommentEvent";

                    foreach (int logId in eventLogIds)
                    {
                        if (subscriptions.ContainsKey(logId) == true)
                        {
                            isSubscribed = true;
                            break;
                        }
                    }

                    //do we need to anonymize?
                    /*if(item.IsAnonymous && item.Creator != null && currentUser.ID != item.Creator.ID)
                    {
                        item.Creator.FirstName = "A student";
                        item.Creator.LastName = "";
                        item.Creator.ID = -1;
                    }*/

                    <article id="feed-item-@lastLogId" data-id="@lastLogId" class="feed-item-single @additionalStyle">

                        <div class="dp_post panel panel-default" >
                            <div class="dp_post_header panel-heading">
                                <img src="@Url.Action("Picture", "User", new { id = item.Creator.ID, size = 52 })" class="profile_picture" title="profile image" alt="profile image" />
                                @*if (item.HelpfulMarks > 0)
                                {
                                    @:<span class="helpful-marks">+@item.HelpfulMarks</span>
                                }*
                                @if (isSubscribed)
                                {
                                    <img src="~/Content/icons/follow.png" alt="you are following this post" title="you are following this post" />
                                }

                                <a class="display_name" href="@Url.Action("Index", "Profile", new { id = item.Creator.ID })">@item.Creator.FullName</a>
                                <time class="utc-time feed-item-date"
                                        datetime="@Helpers.DateAsUnixTime(item.MostRecentOccurance)"
                                        data-original-date="@Helpers.RawDate(item.MostRecentOccurance)"
                                        data-date-format="MM/DD/YYYY hh:mm A">
                                    @item.MostRecentOccurance.ToString("MM/dd @ hh:mmtt") (UTC)
                                </time>

                                @* Mail and Delete Buttons *
                                <div class="dp_tools">
                                    @if (ViewBag.CurrentUser.ID != item.Creator.ID && !item.IsAnonymous)
                                    {
                                        <a title="Mail This User" href="@Url.Action("CreateUser", "Mail", new { id = item.Creator.ID })"><span class="glyphicon glyphicon-envelope"></span></a>
                                    }
                                    @if (ViewBag.CurrentUser.ID == item.Creator.ID || ViewBag.ActiveCourseUser.AbstractRole.CanModify)
                                    {
                                        string deleteAction = "";
                                        string deleteConfirm = "";
                                        if (item.FeedItemType.Replace(" ", String.Empty) == "FeedPostEvent")
                                        {
                                            deleteAction = "DeleteFeedPost";
                                            deleteConfirm = "Are you sure you want to delete this post and all its replies?";
                                        }
                                        else if (item.FeedItemType.Replace(" ", String.Empty) == "LogCommentEvent")
                                        {
                                            deleteAction = "DeleteLogComment";
                                            deleteConfirm = "Are you sure you want to delete this reply?";
                                        }

                                        <form action="@Url.Action(deleteAction)"
                                                style="display: inline;"
                                                data-ajax="true"
                                                data-ajax-success="$('#feed-item-@(item.Items[0].Event.EventLogId)').hide('blind',{},'slow',function(){$(this).remove();})"
                                                data-ajax-confirm="@deleteConfirm"
                                                method="post">
                                            <input type="hidden" name="id" value="@item.Items[0].Event.EventLogId" />
                                            @*Helpers.DeleteSubmit("Delete This Dashboard Post")*
                                            <a title="Delete This Dashboard Post" onclick="$(this).parents('form:first').submit(); decreaseConversationsNumber(@ViewBag.ParentId);"><span class="glyphicon glyphicon-trash"></span></a>
                                        </form>
                                    }
                                    @if (ViewBag.CurrentUser.ID == item.Creator.ID || ViewBag.ActiveCourseUser.AbstractRole.CanModify)
                                    {
                                        string editAction = "";
                                        string editConfirm = "";

                                        if (item.FeedItemType.Replace(" ", String.Empty) == "FeedPostEvent")
                                        {
                                            editAction = "EditFeedPost";
                                        }
                                        else if (item.FeedItemType.Replace(" ", String.Empty) == "LogCommentEvent")
                                        {
                                            editAction = "EditLogComment";
                                        }

                                        <form action="@Url.Action(editAction)"
                                                id="edit-form-@item.Items[0].Event.EventLogId"
                                                style="display: inline;"
                                                data-ajax="true"
                                                data-ajax-sucess="$('#feed-item-@(item.Items[0].Event.EventLogId)').hide('blind',{},'slow',function(){$(this).remove();})"
                                                data-ajax-confirm="@editConfirm"
                                                method="POST">
                                            <input type="hidden" , name="id" , value="@item.Items[0].Event.EventLogId"/>
                                            <a title="Edit This Post" onclick="updateText(@item.Items[0].Event.EventLogId);"><span class="glyphicon glyphicon-pencil"></span></a>
                                        </form>
                                    }
                                </div>
                            </div>


                            <div class="dp_content" >
                                @{
                                    string partialName = showDetails? "Details/_" : "Feed/_";
                                    partialName += item.Items.First().Event.EventName.Replace(" ", String.Empty);
                                }
                                @Html.Partial(partialName, item)
                            </div>

                            <div class="feed-item-comments panel-group" id="feed-item-comments-@lastLogId">
                                @{
                                    List<FeedItem> commentItems = new List<FeedItem>();
                                    foreach (LogCommentEvent comment in item.Comments)
                                    {
                                        FeedItem fi = new FeedItem();
                                        fi.Event = comment;
                                        fi.Comments = new List<LogCommentEvent>();
                                        commentItems.Add(fi);
                                    }
                                    if (commentItems.Count > 0)
                                    {
                                        // Set these to make the comments display properly
                                        ViewDataDictionary vdd = new ViewDataDictionary(ViewData);
                                        vdd["ShowFooter"] = false;
                                        vdd["ShowDetails"] = true;

                                        ViewBag.ParentId = item.Items[0].Event.EventLogId;
                                        @Html.Partial("Feed/_FeedItems", AggregateFeedItem.FromFeedItems(commentItems), vdd)
                                    }
                                }

                            </div>

                        @if(showFooter)
                        {
                            <div class="feed-item-footer">
                                @if (!isComment) {
                                    @* Note: Hidden by default. Only shows when user clicks reply *
                                    using (Ajax.BeginForm("PostComment", "Feed",
                                        new AjaxOptions
                                        {
                                            HttpMethod = "POST",
                                            UpdateTargetId = "feed-item-comments-" + lastLogId,
                                            OnSuccess = "PostReplyComplete(" + lastLogId + ")",
                                        },
                                        new {
                                            @class = "feed-reply-form",
                                            id = "feed-reply-" + lastLogId,
                                        }))
                                    {
                                        <textarea name="response" id="feed-item-respond-@lastLogId" placeholder="Say something..." class="form-control"></textarea>
                                        <input name="response-submit" class="btn btn-default btn-sm" type="submit" value="Send" />
                                        <input name="response-cancel" class="btn btn-default btn-sm" type="reset" value="Cancel" onclick="HideReplyBox(@lastLogId)" />
                                        <input name="logID" type="hidden" value="@lastLogId" />
                                        <input name="showDetails" type="hidden" value="@showDetails.ToString()" />
                                    }
                                }

                                <ul class="feed-item-links">
                                    @* No need to have a "details" link if we're already there *
                                    @if (!showDetails)
                                    {
                                        int[] ids = item.Items.Select(i => i.Event.EventLogId).ToArray();
                                        string idString = string.Join(",", ids);
                                        <li>
                                            @if (isComment)
                                            {
                                                <a href="@Url.Action("Details", "Feed", new { id = idString })">View Full Conversation</a>
                                            }
                                            else
                                            {
                                                <a id="expand-comments-@lastLogId" class="anchor-pointer" onclick="expandComments('@lastLogId')">
                                                    <span id="expand-comments-text-@lastLogId">View</span> Conversation(<span data-bind="text: NumberOfComments" id="number-of-comments-for-@item.Items[0].Event.EventLogId">@item.Comments.Count</span>)
                                                </a>
                                            }

                                        </li>
                                        <li><a href="@Url.Action("Details", "Feed", new { id = idString })">Details</a></li>
                                    }

                                    @* Prevent replying to replies *
                                    @if (!isComment) {
                                    <li><a id="btn-reply-@lastLogId" onclick="ShowReplyBox(@lastLogId)" >Reply</a></li>
                                    }

                                </ul>
                            </div>
                            }
                        </div>
                </article>
                }
                    *@
