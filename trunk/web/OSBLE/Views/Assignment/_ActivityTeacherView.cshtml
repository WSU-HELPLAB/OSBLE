@using OSBLE.Models.Assignments.Activities
@model AbstractAssignmentActivity

<script type="text/javascript">

    function Ajaxfailed() {
        alert('Failed to get information from the server try to refresh the page');
    }

</script>

@*This page is for teachers only*@
@if (ViewBag.ActiveCourse.CourseRole.CanModify)
{
    
    int StudioAssignmentCounter = ViewBag.StudioAssignmentCounter;
    int activityCounter = ViewBag.ActivityCounter;
    
    string accordionHeaderID = StudioAssignmentCounter.ToString() + "_" + activityCounter.ToString();
    string tableID = "table_" + StudioAssignmentCounter.ToString() + "_" + activityCounter.ToString();
    
    
     @* Get submission's release date as start date *@
    DateTime startDate = Model.ReleaseDate;
                    @* Get the activity following the submission's release date as end date *@
    DateTime endDate = ViewBag.EndDate;
        <div class="activity_header">
        @Ajax.ActionLink(Model.Name, "ActivityTeacherTable", "Assignment", new { id = Model.ID }, new AjaxOptions() { LoadingElementId="Loading",  InsertionMode = InsertionMode.Replace, UpdateTargetId = tableID, OnFailure = "Ajaxfailed" }, new { id = accordionHeaderID })
    </div>
    <div>
                        <table>
                            <tr>
                                <th>
                                    <span>Start Date</span>
                                </th>
                                <td>
                                    <span>@startDate.ToString()</span>
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <span>End Date</span>
                                </th>
                                <td>
                                    <!--Make the due date red if less than 3 days away from being due-->
                                    @if (endDate > DateTime.Now && endDate < DateTime.Now.AddDays(3))
                                    { 
                                        <span style="color: Red">@endDate.ToString()</span>
                                        
                                    }
                                    else
                                    {
                                        <span>@endDate.ToString()</span>
                                    }
                                </td>
                            </tr>
                            @* Only show grading if points possible are greater than 0 *@
                            @if (Model.PointsPossible > 0)
                            {
                            <tr>
                                <th>
                                        <span>Grading</span>
                                    </th>
                                    <td>
                                        <span>Worth @Model.PointsPossible points in <em>@Model.AbstractAssignment.Category.Name</em> category</span>
                                    </td>
                                </tr>    

                            }
                        </table>
                        <text id="Loading">We are trying to find the data from in our mess... it will be displayed as soon as we find it </text>
    <div id="@(tableID)">
    </div>
                        @{
                            //Html.RenderAction("ActivityTeacherTable", new { id = Model.ID });
                            }
                        <div class="submission_deliverables_end">
                        </div>
                        </div>
}