@using OSBLE.Models
@using OSBLE.Models.Assignments
@model Assignment

@{
    Assignment assignment = Model;   
}

<h2>@assignment.AssignmentName</h2>

<table>
<tr><th>Name</th><th>Grade</th></tr>
@foreach (Tuple<string, AssignmentTeam> da in ViewBag.ScoresAndTeams)
{
    <tr>
        <td>
            
            @if (assignment.HasTeams)
            {
                @da.Item2.Team.Name
            }
            else
            {
                @(da.Item2.Team.TeamMembers.FirstOrDefault().CourseUser.UserProfile.LastName + ", " + da.Item2.Team.TeamMembers.FirstOrDefault().CourseUser.UserProfile.FirstName)
            }
            
        </td>
        <td>
            @da.Item1
        </td>
        @{
            if (assignment.HasDeliverables)
            {
                AjaxOptions options = new AjaxOptions()
                {
                    LoadingElementId = "Loading",
                    HttpMethod = "Get",
                    UpdateTargetId = "submitFiles",
                    OnComplete = "SubmissionLoaded"
                };
                <td>@(Ajax.ActionLink("Submit...", "Create", "Submission", new { id = assignment.ID }, options, new object()))</td>
            }
        }
    </tr>
}
</table>
<br />@Html.ActionLink("Download all submissions for this activity", "GetAllSubmissionsForActivity", "FileHandler", new { assignmentID = assignment.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" })

<script type="text/javascript">
    function create_and_open_downloading_submission_dialog() {

        //create the div that we will then make into a dialog

        $('body').append(
      '<div id="downloading_submission_dialog" title="Download Submission"> \
       <p>The zip is being generated and will automatically start downloading when it is ready, please do not leave the page or click the link again</p> \
   </div>');

        //make the div we just created into a dialog box

        $('#downloading_submission_dialog').dialog({
            modal: false,
            autoOpen: true,
            resizable: true,
            width: 350,
            height: 300,
            closeOnEscape: true,
            close: remove_downloading_submission_dialog,
            buttons: { "OK": remove_downloading_submission_dialog }
        });

        $('#downloading_submission_dialog').dialog('open');
        return false;
    }

    function remove_downloading_submission_dialog() {

        //change the dialog back into a normal div (that is what destroy does although it does not destroy the div)
        $('#downloading_submission_dialog').dialog("destroy");

        //then remove the div
        $('#downloading_submission_dialog').remove();
    }


    function SubmissionLoaded() {
        $('#submit_files_dialog').dialog('open');

    }
</script>

<text id="Loading" style="display:none"> <br />Please Wait...</text>
<div id="submit_files_dialog" style="display:none">
    <div id= "submitFiles"></div>
    <script type="text/javascript">
        $(function () {
            $('#submit_files_dialog').dialog(
            {
                modal: true,
                autoOpen: false,
                height: 600,
                width: 500
            });
        });
    </script>
    </div>
</div>