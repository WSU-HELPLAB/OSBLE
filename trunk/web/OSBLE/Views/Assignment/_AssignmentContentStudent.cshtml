@using OSBLE.Models.Assignments
@using OSBLE.Models.Assignments.Activities
@model StudioAssignment

@{
StudioAssignment sa = Model;
int StudioAssignmentCounter = (int)ViewBag.StudioAssignmentCounter;
}

<div class="assignment_header">
            <a id="@StudioAssignmentCounter" href="#" onclick="alert('that really hurt')">@sa.Name</a>
        </div>
        <div>
            <div class="assignment_title">
                Description</div>
            @* Add links to assignment description *@
            <div class="assignment_description">@Helpers.Linkify(sa.Description)</div>
            @if (sa.Deliverables.Count > 0)
            {

                if (sa.AssignmentActivities.Where(aa => aa is SubmissionActivity).Count() > 0)
                {
                <div class="assignment_title">
                    Submissions
                </div>

                <ul class="assignment_deliverables">
                    @{
@* First get full list of assignment activities. This is to later get the assignment activity
                                Immediately following each submission activity. The controller's responsibility is to send
                                this view only lists of assignment activities where there are at least 2 activities and the last
                                is a stop, which guarantees that if there are submission activities, there will be an activity
                                after it to define an end date. *@
                    List<AbstractAssignmentActivity> assignmentActivities = sa.AssignmentActivities.OrderBy(aa => aa.ReleaseDate).ToList();
@* Now get each submission activity. *@
                    List<AbstractAssignmentActivity> submissionActivities = assignmentActivities.Where(aa => aa is SubmissionActivity).OrderBy(aa => aa.ReleaseDate).ToList();

                    int submissionCounter = 0;

                    foreach (SubmissionActivity submission in submissionActivities)
                    {
@* Get submission's release date as start date *@
                        DateTime startDate = submission.ReleaseDate;
@* Get the activity following the submission's release date as end date *@
                        DateTime endDate = assignmentActivities[assignmentActivities.IndexOf(submission) + 1].ReleaseDate;    
                                        
                        <li>
                            <input id="@(StudioAssignmentCounter.ToString() + "_" + submissionCounter.ToString())" type="hidden" value="@submission.ID" />
                            <table>
                                <tr>
                                    <th>
                                        <span>Start Date</span>
                                    </th>
                                    <td>
                                        <span>@startDate.ToString()</span>
                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <span>End Date</span>
                                    </th>
                                    <td>
                                        <!--Make the due date red if less than 3 days away from being due-->
                                        @if (endDate > DateTime.Now && endDate < DateTime.Now.AddDays(3))
                                        { 
                                            <span style="color: Red">@endDate.ToString()</span>
                                        
                                        }
                                        else
                                        {
                                            <span>@endDate.ToString()</span>
                                        }
                                    </td>
                                </tr>
                            </table>
                            <h4>
                                Deliverables</h4>
                            <div>
                                @{
                                        int deliverablesCounter = 0;
                                }
                                @foreach (Deliverable d in sa.Deliverables)
                                {
                                    SelectListItem sli = ViewBag.DeliverableTypes[d.Type];
                                    <div class="submission_deliverable">
                                        @* Get deliverable type string *@
                                        <table>
                                            <tr>
                                                <th>
                                                    <span>Name</span>
                                                </th>
                                                <td >
                                                    <span>@d.Name</span>
                                                </td>
                                            </tr>
                                            <tr>
                                                <th>
                                                    <span>Type</span>
                                                </th>
                                                <td>
                                                    <span>@sli.Text</span>
                                                </td>
                                            </tr>
                                            <!--Only have submitted if it is someone who can submit and past the time
                                            that they could have submitted something-->
                                            @if (ViewBag.CanSubmit && submission.ReleaseDate < DateTime.Now)
                                            {
                                                <tr>
                                                    <th>
                                                        <span>Submitted:</span>
                                                    </th>
                                                    <td>
                                                        <!--If submitted put the time it was submitted in green or say Not Submitted in red-->
                                                        @{
                                                Tuple<bool, DateTime> submittedTime = ViewBag.SubmissionDictionary[submission.ID][deliverablesCounter] as Tuple<bool, DateTime>;
                                                if (submittedTime.Item1)
                                                {
                                                            <span style="color: Green">@(submittedTime.Item2)</span>
                                                }
                                                else
                                                {
                                                            <span style="color: Red">Not Submitted</span>
                                                }
                                                        }
                                                    </td>
                                                </tr>
@*
                                                TODO: This is where submission links/status should appear (for students)
                                                and grading links should appear (for instructors)
                                                *@
                                            }
                                        </table>
                                    </div>
                                            deliverablesCounter++;
                                }
                            </div>
                            <div class="submission_deliverables_end">
                            </div>
                        </li>   
                                if (ViewBag.CanSubmit && submission.ReleaseDate < DateTime.Now)
                                { 
                        <button onclick="location.href='@Url.Action("Create", "Submission", new { id = submission.ID.ToString() })'">
                            Submit Files For This Submission</button>   
                                }

                                submissionCounter++;
                    }
                                
                    }
                </ul>
                }


            }
        
@* Only show grading if points possible are greater than 0 *@
            @if (sa.PointsPossible > 0)
            {

                <div class="assignment_title">
                    Grading</div>

                <div class="assignment_grading">
                    Worth @sa.PointsPossible points in <em>@sa.Category.Name</em> category
                </div>          

            }
        </div>