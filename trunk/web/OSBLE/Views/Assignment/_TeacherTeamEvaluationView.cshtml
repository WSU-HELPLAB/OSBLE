@using OSBLE.Models
@using OSBLE.Models.Assignments
@using OSBLE.Models.Courses
@using OSBLE.Models.Assignments
@model Assignment

@{
    Assignment assignment = ViewBag.Assignment;
    ViewBag.Title = "Team Evaluation";
    AssignmentTeam team = ViewBag.Team;
}

<h2>@team.Team.DisplayName(ViewBag.ActiveCourse.AbstractRole) Team Member Evaluations</h2>


@{
    List<TeamEvaluation> teamEvaluations = (from t in ViewBag.TeamEvaluations as IEnumerable<TeamEvaluation>
                                            select t).ToList();

    List<TeamMemberEvaluation> teamMemberEvals = (from t in ViewBag.TeamMemberEvaluations as IEnumerable<TeamMemberEvaluation>
                                                  select t).ToList();
                                                  
    List<TeamMember> teamMembersInOrder = team.Team.TeamMembers.OrderBy(tm => tm.CourseUser.UserProfile.LastName).ToList();

    <table id="TeamMemberEvaluationTable">
        <tr>
            <th>Evaluators</th>
            @foreach (TeamMember member in teamMembersInOrder)
            {
                <th>@member.CourseUser.DisplayName(ViewBag.ActiveCourse.AbstractRole)</th>
            }
            <th>Comments</th>
        </tr>
        
        @foreach (TeamEvaluation te in teamEvaluations)
        {
            <tr>
                @{
                int count = 0;
                foreach (TeamMemberEvaluation tme in te.TeamMemberEvaluations)
                {
                    if (count < 1)
                    {
                        count++;
                        <td>@tme.Evaluator.DisplayName(ViewBag.ActiveCourse.AbstractRole)</td>
                        <td>@tme.Points</td>
                    }
                    else
                    {
                        <td>@tme.Points</td>
                    }
                }
                
                <td>@te.Comments</td>
                }
            </tr>
        }     
        <tr>
            <td>
                <b>Multiplier</b>
            </td>
            
            @foreach (TeamMember member in teamMembersInOrder)
            {
                double multiplier = (from tm in ViewBag.TeamMemberEvaluations as IEnumerable<TeamMemberEvaluation>
                                     where tm.RecipientID == member.CourseUserID
                                     select tm.Points).Sum();
                
                

                multiplier = multiplier / (100 * teamEvaluations.Count());
                
                <td class="multiplierTD">@multiplier
                    <a style="display:none;" onclick="openMultiplierWindow(@member.TeamID, @member.CourseUserID, @multiplier);">@Helpers.EditButton()</a>
                </td>
            }
            <td></td>
        </tr> 
    </table>    
    <br />
    string teamName = team.Team.DisplayName(ViewBag.ActiveCourse.AbstractRole);
    @Html.ActionLink("Publish " + teamName + "'s  Multiplier", "PublishTeamMultiplier", new { teamId = team.TeamID, assignmentId = assignment.ID })                                                                                               
}

	 <!-- Pop-up window for editing late percentage -->
<div id="MultiplierWindow" style="display: none;" title="Edit Multiplier">
   <input type="radio" id="radioBtn1" name="group1"/> Use default multiplier<br />
   <input type="radio" id="radioBtn2" name="group1"/> Use a custom multiplier of <input size="5" id="customMulti"/><br />
   <td>
       <text id="latePenErrorText" style="color:Red; float:left; font-size:smaller"></text><br />
       <div style="float:right">
           <input id="SetMultiplierButton" data-tid="" data-cuid="" type="button" onclick="setMultiplier();" value="Apply Changes" />
           <input type="button" onclick="closeMultiplierWindow();" value="Cancel" />
       </div>
   </td>
</div>

<script type="text/javascript">

    $(".multiplierTD").mouseenter(function () {
        $(this).find("a").show();
    });

    $(".multiplierTD").mouseleave(function () {
        $(this).find("a").hide();
    });

    function openMultiplierWindow(tID, cuID, multi) {
        $("#SetMultiplierButton").attr("data-tid", tID);
        $("#SetMultiplierButton").attr("data-cuid", cuID);
        $("#SetMultiplierButton").attr("data-multi", multi);
        $("#MultiplierWindow").dialog({
            autoOpen: true,
            modal: true,
            resizable: false,
            width: 370,
            height: 150,
            closeOnEscape: false
        });
    }


    function closeMultiplierWindow() {
        $("#MultiplierWindow").dialog("close");
    }

    function setMultiplier() {
        if ($("#radioBtn1").attr('checked') == "checked") {
            $.ajax({
                async: false,
                url: "/Assignment/ModifyMultiplier",
                data: {
                    teamID: $("#SetMultiplierButton").attr("data-tid"),
                    cuID: $("#SetMultiplierButton").attr("data-cuid"),
                    value: $("#SetMultiplierButton").attr("data-multi")
                    }
            });
        }
        else { /*custom*/
            var customValue = $("#customMulti").val();
            $.ajax({
                async: false,
                url: "/Assignment/ModifyMultiplier",
                data: {
                    teamID: $("#SetMultiplierButton").attr("data-tid"),
                    cuID: $("#SetMultiplierButton").attr("data-cuid"),
                    value: customValue
                }
            });
        }
        window.location.reload(true);
    }
</script>