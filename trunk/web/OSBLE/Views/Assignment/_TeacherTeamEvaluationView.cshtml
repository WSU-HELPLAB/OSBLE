@using OSBLE.Models
@using OSBLE.Models.Assignments
@using OSBLE.Models.Courses
@using OSBLE.Models.Assignments
@model Assignment

@{
    Assignment assignment = Model;
    ViewBag.Title = "Team Evaluation";
    Team team = ViewBag.Team;
}

<h2>@team.Name Team Member Evaluations</h2>


@{
    List<TeamEvaluation> teamEvaluations = (from t in ViewBag.TeamEvaluations as IEnumerable<TeamEvaluation>
                                            select t).ToList();

    <table id="TeamMemberEvaluationTable">
        <tr>
            <th>Evaluators</th>
            @foreach (TeamMember member in teamEvaluations.FirstOrDefault().Team.TeamMembers.OrderBy(u => u.CourseUser.UserProfile.LastName))
            {
                <th>@member.CourseUser.UserProfile.FirstName @member.CourseUser.UserProfile.LastName</th>
            }
            <th>Comments</th>
        </tr>
        
        @foreach (TeamEvaluation te in teamEvaluations)
        {
            <tr>
                @{
            int count = 0;
            foreach (TeamMemberEvaluation tme in te.TeamMemberEvaluations.OrderBy(u => u.Recipient.UserProfile.LastName))
            {
                if (count < 1)
                {
                    count++;
                            <td>@tme.Evaluator.UserProfile.FirstName @tme.Evaluator.UserProfile.LastName</td>
                            <td>@tme.Points</td>
                }
                else
                {
                            <td>@tme.Points</td>
                }
            }
                    <td>@te.Comments</td>
                }
            </tr>
        }     
        <tr>
            <td>
                <b>Multiplier</b>
            </td>
            
            @foreach (TeamMember member in teamEvaluations.FirstOrDefault().Team.TeamMembers.OrderBy(u => u.CourseUser.UserProfile.LastName))
            {
                double multiplier = (from tm in ViewBag.TeamMemberEvaluations as IEnumerable<TeamMemberEvaluation>
                                     where tm.RecipientID == member.CourseUserID
                                     select tm.Points).Sum();

                multiplier = multiplier / (100 * teamEvaluations.Count());
                
                <td>@multiplier</td>
            }
            <td></td>
        </tr> 
    </table>                                                                                                   
}


