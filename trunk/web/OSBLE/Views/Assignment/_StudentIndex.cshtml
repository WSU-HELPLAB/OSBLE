@using OSBLE.Models
@using OSBLE.Models.Assignments
@{
    List<Assignment> assignments = ViewBag.Assignments;
    List<TeamEvaluation> teamEvals = ViewBag.TeamEvaluations;
    int PastCount = ViewBag.PastCount;
    int PresentCount = ViewBag.PresentCount;
    int FutureCount = ViewBag.FutureCount;
    bool isFutureAssignment = false;
    
}
<table class="assignTable" cellspacing="0">
    <th style="font-size: larger; padding-right:20px;">
        Assignment
    </th>
    <th style="font-size: larger">
        Due Date
    </th>
    <th style="font-size: larger">
        Latest Submission
    </th>
    @{
        
        
        for (int i = 0; i < assignments.Count; i++)
        {
            //if/else blocks used to for adding rows as headers between Past, Present, Future
            if (i == 0 && PastCount > 0)
            {
                <tr>
                    <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                        Past (@PastCount)
                    </td>
                </tr>
            }
            
            else if (i == (PastCount) && PresentCount > 0)
            {
                
                if (PastCount > 0)
                {
                    //Only put a an empty row if there is something above this category
                    <tr>
                        <td style="padding-bottom: 10px">
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                        Present (@PresentCount)
                    </td>
                </tr>
            }
            else if (i == (PastCount + PresentCount) && FutureCount > 0)
            {
                isFutureAssignment = true;
                if ((PastCount + PresentCount) > 0)
                {
                    //Only put a an empty row if there is something above this category
                    <tr>
                        <td style="padding-bottom: 10px">
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                        Future (@FutureCount)
                    </td>
                </tr>
            }

        <tr class="checkeredRow">
            <td>
                <!--Cell for name-->
                @if (isFutureAssignment)
                {
                    @assignments[i].AssignmentName
                }
                else
                {
                    @Html.ActionLink(assignments[i].AssignmentName, "Index", "Home", new { area = "AssignmentDetails", assignmentId = assignments[i].ID }, null)
                }
            </td>
            <td>@assignments[i].DueDate.ToShortDateString() @assignments[i].DueDate.ToShortTimeString()
            </td>
            @if (isFutureAssignment)
            {
                <td>
                </td>
            }
            else if (assignments[i].HasDeliverables)
            {
                AjaxOptions options = new AjaxOptions()
                {
                    LoadingElementId = "Loading",
                    HttpMethod = "Get",
                    UpdateTargetId = "submitFiles",
                    OnComplete = "SubmissionLoaded"
                };
                if (ViewBag.SubmissionInfoDictionary[assignments[i].ID] != "No Submission")
                {  
                    <!--td for resubmit-->
                    String display = ViewBag.SubmissionInfoDictionary[assignments[i].ID];
                    <td>
                        <ul id="SubmissionItems">
                            <li>
                                @(Html.ActionLink(display, "getCurrentUsersZip", "FileHandler", new { assignmentID = assignments[i].ID }, new { onclick = "create_and_open_downloading_submission_dialog()" }))
                            </li>
                            <li>
                                @Ajax.ActionLink("Resubmit", "Create", "Submission", new { id = assignments[i].ID }, options, new object())
                            </li>
                            @if (ViewBag.SubmissionReceived && assignments[i].ID == ViewBag.SubmissionReceivedAssignmentID)
                            {
                                <li id="SubmissionReceivedText">Submission received</li>   
                            }
                        </ul>
                    </td>
                }
                else
                {
                    <!--TD for first submission-->
                    <td>
                        None.
                        @Ajax.ActionLink("Submit Here", "Create", "Submission", new { id = assignments[i].ID }, options, new object())
                    </td>
                }
            }
            else if (assignments[i].Type == AssignmentTypes.TeamEvaluation)
            {
                bool found = (from te in teamEvals
                              where te.TeamEvaluationAssignmentID == assignments[i].ID
                               select te).Count() > 0;
                    
                if (found == false)
                {
                    <td>
                        @Html.ActionLink("Submit Team Evaluation", "StudentTeamEvaluation", "Assignment", new { assignmentId = assignments[i].ID }, new { })
                    </td>
                }
                else
                {
                    <td>
                        @Html.ActionLink("View/Edit Team Evaluation", "StudentTeamEvaluation", "Assignment", new { assignmentId = assignments[i].ID }, new { })
                    </td>
                }
            }
            else
            {
                <td>
                    No Deliverables
                </td>
            }
        </tr>
        }
    }
</table>
