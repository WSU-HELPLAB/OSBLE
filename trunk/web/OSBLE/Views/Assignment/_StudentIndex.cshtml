@using OSBLE.Models
@using OSBLE.Models.Assignments
<table class="assignTable" cellspacing="0">
    <th style="font-size: larger; padding-right:20px;">
        Assignment
    </th>
    <th style="font-size: larger">
        Due Date
    </th>
    <th style="font-size: larger">
        Latest Submission
    </th>
    @{
        List<TeamEvaluation> teamEvals = (from te in ViewBag.TeamEvaluations as IEnumerable<TeamEvaluation>
                                          select te).ToList();

        //MG & KD: Assignments are in order based on:: past & present -> future -> draft. The flags below are used to: a)avoid duplicate headers for each category
        //and b) allow the logic below the headers determine how to treat the assignment
        bool futureFlag = false, presentFlag = false, pastFlag = false;
        foreach (Assignment assignment in ViewBag.Assignments)
        {
            if (assignment.DueDate < ViewBag.CurrentDate && !pastFlag)
            {
                //PAST
                pastFlag = true;
                <tr>
                    <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                        Past (@ViewBag.PastCount)
                    </td>
                </tr>
            }
            else if (assignment.ReleaseDate > ViewBag.CurrentDate && !futureFlag)
            {
                //FUTURE
                futureFlag = true;
                if (pastFlag || presentFlag)
                {
                    <tr>
                        <td style="padding-bottom: 10px">
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                        Future (@ViewBag.FutureCount)
                    </td>
                </tr>

            }
            else if (assignment.DueDate >= ViewBag.CurrentDate && !presentFlag)
            {
                //PRESENT
                presentFlag = true;
                if (pastFlag)
                {
                    <tr>
                        <td style="padding-bottom: 10px">
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                        Present (@ViewBag.PresentCount)
                    </td>
                </tr>
            }

        <tr class="checkeredRow">
            <td>
                <!--Cell for name-->
                @if (futureFlag)
                {
                    @assignment.AssignmentName
                }
                else
                {
                    @Html.ActionLink(assignment.AssignmentName, "Index", "Home", new { area = "AssignmentDetails", assignmentId = assignment.ID }, null)
                }
            </td>
            <td>@assignment.DueDate.ToShortDateString() @assignment.DueDate.ToShortTimeString()
            </td>
            @if (futureFlag)
            {
                <td>
                </td>
            }
            else if (assignment.HasDeliverables)
            {
                AjaxOptions options = new AjaxOptions()
                {
                    LoadingElementId = "Loading",
                    HttpMethod = "Get",
                    UpdateTargetId = "submitFiles",
                    OnComplete = "SubmissionLoaded"
                };
                if (ViewBag.SubmissionInfoDictionary[assignment.ID] != "No Submission")
                {  
                    <!--td for resubmit-->
                    String display = ViewBag.SubmissionInfoDictionary[assignment.ID];
                    <td>
                        <ul id="SubmissionItems">
                            <li>
                                @(Html.ActionLink(display, "getCurrentUsersZip", "FileHandler", new { assignmentID = assignment.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" }))
                            </li>
                            <li>
                                @Ajax.ActionLink("Resubmit", "Create", "Submission", new { id = assignment.ID }, options, new object())
                            </li>
                            @if (ViewBag.SubmissionReceived && assignment.ID == ViewBag.SubmissionReceivedAssignmentID)
                            {
                                <li id="SubmissionReceivedText">Submission received</li>   
                            }
                        </ul>
                    </td>
                }
                else
                {
                    <!--TD for first submission-->
                    <td>
                        None.
                        @Ajax.ActionLink("Submit Here", "Create", "Submission", new { id = assignment.ID }, options, new object())
                    </td>
                }
            }
            else if (assignment.Type == AssignmentTypes.TeamEvaluation)
            {
                bool found = (from te in teamEvals
                               where te.TeamEvaluationAssignmentID == assignment.ID
                               select te).Count() > 0;
                    
                if (found == false)
                {
                    <td>
                        @Html.ActionLink("Submit Team Evaluation", "StudentTeamEvaluation", "Assignment", new { assignmentId = assignment.ID }, new { })
                    </td>
                }
                else
                {
                    <td>
                        @Html.ActionLink("View/Edit Team Evaluation", "StudentTeamEvaluation", "Assignment", new { assignmentId = assignment.ID }, new { })
                    </td>
                }
            }
            else
            {
                <td>
                    No Deliverables
                </td>
            }
        </tr>
        }
    }
</table>
