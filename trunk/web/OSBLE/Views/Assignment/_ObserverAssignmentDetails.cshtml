@using OSBLE.Models
@using OSBLE.Models.Assignments
@using OSBLE.Models.Courses
@using OSBLE.Models.Assignments
@model Assignment

@{
    Assignment assignment = Model;
    ViewBag.Title = "Assignment Details";

    List<CourseUser> cuList = ViewBag.ObserverCU;
    
    int submittedCount = 0;
    int totalStudentCount = 0;
    int totalScores = 0;
    foreach (Tuple<Score, Team, string> da in ViewBag.ScoresAndTeams)
    {
        if (da.Item3 != "No Submission")
        {
            submittedCount++;
        }
        if (da.Item1 != null)
        {
            if (da.Item1.Points >= 0)
            {
                totalScores++;
            }
        }
        totalStudentCount++;
    }
    List<OSBLE.Models.Courses.Rubrics.RubricEvaluation> r = ViewBag.RubricEvals;
    if (assignment.HasDeliverables)
    {
        @:<tr>
            <td><text class="osbleColorBold">Submissions:</text></td>
            if (submittedCount > 0)
            {
                <td>@submittedCount of @totalStudentCount have been submitted&nbsp @Html.ActionLink("[Download All]", "GetAllSubmissionsForActivity", "FileHandler", new { assignmentID = assignment.ID }, new { onclick = "create_and_open_downloading_submission_dialog()", style="text-decoration:none"})</td>    
            }
            else
            {
                <td>@submittedCount of @totalStudentCount have been submitted</td>
            }
    }
    <tr>
        <td style="vertical-align:top"><text class="osbleColorBold" >Grading progress:</text></td>
        <td>
            @totalScores of @assignment.AssignmentTeams.Count() have been published<br />
            @r.Count() have been saved as draft
        </td>
    </tr>
}   
 </table>
    
<table class="assignDetailsTable" cellspacing="0">
<!-- Look up activityTeachertable for similar set up
For name: If a team, display team name and on next line display team members. Have option to email whole team or individual
for grade: if a rubric assignment, link to rubric tool. Else just show the grade. Display No Grade for NGs and underline them with link if there is a rubric
For inline comments: Only show if assignment has comment categories. Then allow user to go each students
For late penalty: display the currently used late penalty. Have edit option there
For Submission: have a download option with the time submitted or say "Nothing Submitted"
-->
<th>Name</th>
<th>Grade</th>
@if (assignment.HasCommentCategories)
{
    <th>Inline Comments</th>    
}
    
@if (assignment.HasDeliverables)
{
    <th>Submission</th>
}
<th>Late Penalty</th>
<br />

@foreach (Tuple<Score, Team, string> da in ViewBag.ScoresAndTeams)
{
    <tr>    
        <td> <!--Cell for name-->
            @if (assignment.HasTeams)
            {
                <span style="text-decoration: underline">Team @da.Item2.ID</span>
                <a title="Email this team" href="@Url.Action("CreateEntireTeam", "Mail", new { teamID = da.Item2.ID })">@Helpers.MailButton()</a>
                <br/>
                var teamList = "";
                int i = 1;
                foreach (TeamMember tm in da.Item2.TeamMembers)
                {
                    if (i == da.Item2.TeamMembers.Count)
                    {
                        teamList += " & Anonymous " + cuList.IndexOf(tm.CourseUser);
                    }
                    else if (i == 1)
                    {
                        teamList += " Anonymous " + cuList.IndexOf(tm.CourseUser);
                    }
                    else
                    {
                        teamList += ", Anonymous " + cuList.IndexOf(tm.CourseUser);
                    }
                    i++;
                }
                <span>@teamList</span>
            }
            else
            {
                <a title="Email this User" href="@Url.Action("CreateUser", "Mail", new { id = da.Item2.TeamMembers.FirstOrDefault().CourseUser.UserProfileID })">@Helpers.MailButton()</a>
                @(" Anonymous " + cuList.IndexOf(da.Item2.TeamMembers.FirstOrDefault().CourseUser))
                    
            }
            
        </td>
        <td> <!--Cell for grade-->                
            @if (assignment.HasRubric)
            {
                if (da.Item1 == null)
                {
                    r.OrderBy(o => o.Recipient.TeamMembers.FirstOrDefault().CourseUser.UserProfile.LastName);
                    bool found = false;
                    foreach (OSBLE.Models.Courses.Rubrics.RubricEvaluation eval in r)
                    {
                        if (eval.Recipient.ID == da.Item2.ID)
                        {
                            if (!eval.IsPublished)
                            {
                                found = true;
                            }
                        }
                    }
                    if (found)
                    {
                            @Html.ActionLink("View", "Rubric", new { assignmentId = assignment.ID, cuId = ViewBag.CurrentUserID }, new { })
                    }
                    else
                    {
                            @Html.ActionLink("View Rubric", "ViewAsUneditable", "Rubric", new { assignmentId = assignment.ID }, new { })
                    }

                }
                else
                {
                        @Html.ActionLink(da.Item1.getGradeAsPercent(da.Item1.Assignment.PointsPossible), "Index", "Rubric", new { assignmentId = da.Item1.AssignmentID, cuId = da.Item2.TeamMembers.FirstOrDefault().CourseUserID }, new { });
                }
            }
            else
            {
                if (da.Item1 == null)
                {
                    <a href="#" onclick="goToCategoryTab(@assignment.CategoryID, @da.Item2.TeamMembers.FirstOrDefault().CourseUser.ID);" style="cursor:pointer;">Not Graded</a>
                }
                else
                {
                    <a href="#" onclick="goToCategoryTab(@da.Item1.Assignment.CategoryID, @da.Item2.TeamMembers.FirstOrDefault().CourseUser.ID);" style="cursor:pointer;">@da.Item1.getGradeAsPercent(da.Item1.Assignment.PointsPossible)></a>
                }
            }    
        </td>
        @if (assignment.HasCommentCategories)
        {
            <td> <!--Cell for inline comments - only allow them to edit if there has been something submitted-->
                @if (da.Item3 != "No Submission")
                {
                    @Html.ActionLink("View/Edit...", "InlineReview", "Assignment", new { assignmentID = assignment.ID, teamID = da.Item2.ID }, new { })
                }
                else
                {
                    @:Nothing to Review
                }
            </td>
        }
            
        @if (assignment.HasDeliverables)
        {
            <td><!--Cell for submission download - only allow if there is a time submitted-->
                @if (da.Item3 != "No Submission")
                {
                    @(Html.ActionLink(da.Item3, "GetSubmissionZip", "FileHandler", new { assignmentID = assignment.ID, teamID = da.Item2.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" }))
                }
                else
                {
                    @:Nothing Received
                }
            </td>
        }
        <td style="vertical-align:bottom;" class="latePenaltyTd"> <!--Cell for late penalty-->
                @if (da.Item1 == null)
                {
                    @:0.00 % <a class="latePenaltyA" style="display:none;" onclick="openManualLatePenWindow(0, @da.Item2.TeamMembers.FirstOrDefault().CourseUser.ID, @assignment.ID);">@Helpers.EditButton()</a>
                }
                else
                {
                    @da.Item1.getAppliedLatePenaltyAsDecimal().ToString("P") <a class="latePenaltyA" style="display:none;" onclick="openManualLatePenWindow(@da.Item1.ID, @da.Item2.TeamMembers.FirstOrDefault().CourseUser.ID, @assignment.ID);">@Helpers.EditButton()</a>
                }
        </td>
    </tr>
}
</table>
