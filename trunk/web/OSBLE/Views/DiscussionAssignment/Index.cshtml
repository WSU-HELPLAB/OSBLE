@using OSBLE.Models
@using OSBLE.Models.Courses
@using OSBLE.Models.HomePage
@using OSBLE.Models.DiscussionAssignment
@using OSBLE.Models.Assignments
@using OSBLE.Models.ViewModels
@{

    Assignment assignment = ViewBag.Assignment;
    ViewBag.Title = "Discussion Assignment: " + assignment.AssignmentName;
    List<DiscussionPostViewModel> DiscussionPostViewModelList = ViewBag.DiscussionPostViewModelList; 
    int discussionTeamID = ViewBag.DiscussionTeamID;
    
    string selectBoxID = "dtStudentSelect";
    if (ViewBag.ActiveCourse.AbstractRole.CanModify)
    {
        selectBoxID = "dtInstructorSelect";
    }
}
<script type="text/javascript">

    $(document).ready(function () {

        $('#dtInstructorSelect').change(function () {
            var dtID = $('#dtInstructorSelect').val();
            window.location.replace("/DiscussionAssignment/TeacherIndex?assignmentId=" + @assignment.ID + "&courseUserId=" + 0 + "&postOrReply=" + 3 + "&discussionTeamID=" + dtID);

        });
        $('#dtStudentSelect').change(function () {
            var dtID = $('#dtStudentSelect').val();
            window.location.replace("DiscussionAssignment?assignmentId=" + @assignment.ID + "&discussionTeamId=" + dtID);

        });
    });

    function RemainingCharsReply() 
    { 
        var remainingReply = $('#firstPostLength').val() - $('#ActivityFeed').val().length; 
        if (parseInt(remainingReply)<= 0) 
        { 
            $("#postNewDiscussion").removeAttr("disabled"); $('#firstPostLengthDiv').html("(0) characters remaining for the first post."); } else { $("#postNewDiscussion").attr("disabled","disabled");
            $('#firstPostLengthDiv').html("(" + remainingReply + ") additional characters needed.");
        } 
    } 

    //refreshes the count of how many charecters you can input
    function refreshCount() {
            $('body').css('cursor', 'wait'); $('#remCharsReply').val("(" + $('#MaxContentChars').val() + ") Characters left");
        } 

</script>


<div id="activity_feed">
    <h2>@ViewBag.DiscussionHeader</h2>

    <!--Select Discussion Dropdown-->
    @if (ViewBag.DiscussionTeamList != null && ViewBag.DiscussionTeamList.Count > 1)
    {
        <table>
            <tr>
                <th>Select Discussion:</th>
                <td>
                <select id="@selectBoxID">
                    @foreach (DiscussionTeam dt in ViewBag.DiscussionTeamList)
                    {
                        @*generating select box*@
                        string optionText = "<option value=\"{0}\"{1}>{2}</option>";
                        string selectValue = "";
                        if (dt.ID == ViewBag.DiscussionTeamID)
                        {
                            selectValue = "selected=\"selected\"";
                        }
                        @Html.Raw(String.Format(optionText, dt.ID, selectValue, dt.TeamName));
                    }
                    </select>
                </td>
            </tr>
        </table>
    }

    <!--Fielddset for prompt & Critical Review Discussion prompt-->
    <fieldset style="border-color:White;">
        @Html.Raw(HttpUtility.HtmlDecode(Helpers.WikiUrlLinking(assignment.AssignmentDescription).ToString()))
        <br />

        @if (assignment.Type == AssignmentTypes.CriticalReviewDiscussion)
        {
            @Html.ActionLink("Download Discussion Items",
                "GetCriticalReviewDiscussionItems",
                "FileHandler",
                new { area = "", discussionTeamID = discussionTeamID },
                new { onclick = "create_and_open_downloading_submission_dialog()" })
        }
    </fieldset>
    <br />

    @{
        <!--div for post character counter-->
        if (assignment.DiscussionSettings.MinimumFirstPostLength > 0 && ViewBag.IsFirstPost && assignment.DueDate > DateTime.Now)
        {
            <div>
                A minimum of @assignment.DiscussionSettings.MinimumFirstPostLength characters required
                for first post. You may not see the discussion until you make your first post.</div>
            <div id="firstPostLengthDiv">
                (@assignment.DiscussionSettings.MinimumFirstPostLength) additional characters needed.</div>
            
        }
        <input id="firstPostLength" type="hidden" value="@assignment.DiscussionSettings.MinimumFirstPostLength" />
        
        <!--div for new post-->
        if (assignment.DueDate > DateTime.Now)
        {
            <div>
                <input type="hidden" id="MaxContentChars" value="@ViewBag.MaxActivityFeedLength"/>
                @using (Html.BeginForm("NewPost", "DiscussionAssignment", FormMethod.Post))
                {
                    <input type="hidden" name="DiscussionTeamID" value="@discussionTeamID" />
                    <input type="hidden" name="AssignmentID" value="@ViewBag.Assignment.ID" />
                    <textarea id="ActivityFeed" name="Content" rows="10" style="width: 100%" placeholder="Enter new discussion post here..." onkeydown="RemainingCharsReply()" onkeyup="RemainingCharsReply()"></textarea><br />
                    if (assignment.DiscussionSettings.MinimumFirstPostLength > 0 && ViewBag.IsFirstPost)
                    {
                        <input id="postNewDiscussion" type="submit" name="post_active" value="Post" disabled="disabled" />   
                    }
                    else
                    {
                        <input id="postNewDiscussion" type="submit" name="post_active" value="Post" />
                    }
                }
            </div>
        }
        else
        {
            @:This assignment is closed.<br /><br />
        }
    }
    @if (DiscussionPostViewModelList != null && (ViewBag.IsFirstPost == false || assignment.DiscussionSettings.RequiresPostBeforeView == false))
    {
        HelperResult DefaultProfilePicture = Helpers.DefaultProfilePicture();
        HelperResult displayPicture;
        string displayName = "";

        <!--Generating posts-->
        foreach (DiscussionPostViewModel dpvm in DiscussionPostViewModelList)
        {
            displayName = dpvm.DisplayName;
            if (dpvm.Anonymize == false)
            {
                displayPicture = Helpers.ProfilePicture(Url.Action("ProfilePictureForDiscussion", new { course = dpvm.CourseUser.AbstractCourseID, userprofile = dpvm.CourseUser.UserProfileID }));
            }
            else
            {
                displayPicture = DefaultProfilePicture;
            }
            <div class="dp_post" id="dp_post_@(dpvm.DiscussionPostId)" style="background:white;">
            @if (ViewBag.Student != null
                && ViewBag.Student.ID == dpvm.CourseUser.ID
                && (ViewBag.PostOrReply == 0 || ViewBag.PostOrReply == 2)
                && (ViewBag.ActiveCourse.AbstractRole.CanModify))
            {
                    <!--display as highlighted if there is a student selected, and this is that student-->
                    <script type="text/javascript">
                        $('#dp_post_@(dpvm.DiscussionPostId))').css("background", "#FFF8C6");
                    </script>
            }
                <div class="dp_post_header">
                    @displayPicture
                    @displayName <br />
                    @dpvm.Posted <br /> <br /> 
                </div>
                <div class="dp_content">
                    @{
                        string content = Helpers.Linkify(dpvm.Content).ToHtmlString();
                        content = content.Replace("\n", "<br />");
                    }
                    @Html.Raw(content)
                </div>
                <div class="dp_replies">
                    <div id="dp_replies_for_@(dpvm.DiscussionPostId)">
                        <!--Generating replies under each post-->
                        @foreach (ReplyViewModel reply in dpvm.Replies)
                        {
                            displayName = reply.DisplayName; //reusing displayName/displayPicture as theyre not used further down the post
                            if (reply.Anonymize == false)
                            {
                                displayPicture = Helpers.ProfilePicture(Url.Action("ProfilePictureForDiscussion", new { course = reply.CourseUser.AbstractCourseID, userprofile = reply.CourseUser.UserProfileID }));
                            }
                            else
                            {;
                                displayPicture = DefaultProfilePicture;
                            }
                        
                            <div class="dp_post" id="dp_post_@(reply.DiscussionPostId)" style="background:white;">
                                <div class="dp_post_header">
                                    @displayPicture
                                    @displayName<br />
                                    @reply.Posted <br /> <br /> 
                                </div>
                                <div class="dp_content">
                                    @{
                            content = Helpers.Linkify(reply.Content).ToHtmlString();
                            content = content.Replace("\n", "<br />");
                                    }
                                    @Html.Raw(content)
                                </div>
                            </div>
                        
                            if (ViewBag.Student != null
                                && ViewBag.Student.ID == reply.CourseUser.ID
                                && (ViewBag.PostOrReply == 1 || ViewBag.PostOrReply == 2)
                                && (ViewBag.ActiveCourse.AbstractRole.CanModify || ViewBag.ActiveCourse.AbstractRole.Anonymized))
                            {
                                <!--display as highlighted if there is a student selected, and this is that student-->
                                <script type="text/javascript">
                                    $('#dp_post_@(reply.DiscussionPostId)').css("background", "#FFF8C6");
                                </script>
                            }
                        }
                    </div> 
                </div>
                        @if (assignment.DueDate > DateTime.Now)
                        {
                            <div class="dp_replylink"> <a href="#" id="reply_@(dpvm.DiscussionPostId)">Reply</a></div>
                        }
                <div class="dp_replybox" id="replybox_@(dpvm.DiscussionPostId)" style="padding-left:23px;">
                    @using (Html.BeginForm("NewReply", "DiscussionAssignment", FormMethod.Post))
                    {
                        <input type="hidden" name="DiscussionTeamID" value="@discussionTeamID" />
                        <input type="hidden" name="AssignmentID" value="@ViewBag.Assignment.ID" />
                        <input type="hidden" name="ParentPostID" value="@dpvm.DiscussionPostId" />
                        <span id="remCharsReply" name="remainingCharsReply" readonly="true" value="(@ViewBag.MaxActivityFeedLength) Characters left"></span><br />
                        <textarea name="Content" rows="5" cols="40" id="dp_replybox_content_@(dpvm.DiscussionPostId)" placeholder="Enter reply here..."></textarea><br />
                        <input id="reply @(dpvm.DiscussionPostId) button" type="submit" name="post_reply" value="Post Reply" onclick="refreshCount()" />
                    }
                    <br /> 
                    <div class="dp_replylink"> <a href="#" id="replycancel_@(dpvm.DiscussionPostId)">Cancel</a></div>
                </div>
                <script type="text/javascript">
                    $("#reply_@(dpvm.DiscussionPostId)").click(function () {
                        $("#reply_@(dpvm.DiscussionPostId)").hide();
                        $("#replybox_@(dpvm.DiscussionPostId)").show('blind'); return false;
                    });
                    $("#replycancel_@(dpvm.DiscussionPostId)").click(function () {
                        $("#reply_@(dpvm.DiscussionPostId)").show('highlight'); $("#replybox_@(dpvm.DiscussionPostId)").hide('blind');
                        return false;
                    }); 
                </script>
            </div>
        }
    }
</div>
<p>
</p>