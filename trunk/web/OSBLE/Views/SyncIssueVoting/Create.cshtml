@model OSBLE.Models.Assignments.Activities.SyncIssueVotingActivity
@using OSBLE.Models.Assignments.Activities
@using OSBLE.Models
@{
    ViewBag.Title = "Create Sync Issue Voting";
}
<h2>Create Sync Issue Voting</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/osble.assignments.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {
    });
</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>SyncIssueVotingActivity</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.AbstractAssignmentID, "Abstract Assignment")
            </div>
            <div class="editor-field">
                @Html.DropDownList("AbstractAssignmentID", String.Empty)
                @Html.ValidationMessageFor(model => model.AbstractAssignmentID)
            </div>

            <h2>Settings</h2>

            <h3>Anonymity of Review</h3>

            <div class="editor-field">
                @Html.CheckBoxFor(model => model.peerReviewActivity.IsAuthorAnonymous, new { id = "is_author_anonymous" })
                @Html.LabelFor(model => model.peerReviewActivity.IsAuthorAnonymous)
                @Html.ValidationMessageFor(model => model.peerReviewActivity.IsAuthorAnonymous)
            </div>

            <div class="editor-field">
                @Html.CheckBoxFor(model => model.peerReviewActivity.IsReviewersAnonymous, new { id = "is_reviewer_anonymous" })
                @Html.LabelFor(model => model.peerReviewActivity.IsReviewersAnonymous)
                @Html.ValidationMessageFor(model => model.peerReviewActivity.IsReviewersAnonymous)
            </div>

            <div class="editor-field">
                @Html.CheckBoxFor(model => model.peerReviewActivity.IsReviewersRoleAnonymous, new { id = "is_reviewers_role_anonymous" })
                @Html.LabelFor(model => model.peerReviewActivity.IsReviewersRoleAnonymous)
                @Html.ValidationMessageFor(model => model.peerReviewActivity.IsReviewersRoleAnonymous)
            </div>
            
            <h4>Grading</h4>

            <div>
                <input type="radio" name="SetGrade" value="PercentOfIssues" />
                Set Grade to percentage of issues voted on
                <br />
            </div>

            <div>
                <input type="radio" name="SetGrade" value="PercentAgreementWModerator" />
                Set grade to percent in agreement with moderator
                <br />
            </div>

            <div>
                <input type="radio" name="SetGrade" value="Manually" />
                Manually enter grade
                <br />
            </div>

            <div>
                @Html.Partial("_AddToGradebook")
            </div>

            
        <p>
            <input type="submit" value="Create Sync Issue Voting" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>

