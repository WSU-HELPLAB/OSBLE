@model OSBLE.Models.Assignments.Activities.SyncIssueVotingActivity
@using OSBLE.Models.Assignments.Activities
@using OSBLE.Models
@{
    ViewBag.Title = "Create Sync Issue Voting";
}
<h2>Create Issue Voting</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/osble.assignments.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {
        $('#add_to_gradebook').change(function () {
            if ($('#add_to_gradebook').attr('checked')) {
                $('#grade_options').show('blind');
            } else {
                $('#grade_options').hide();
            }
        });
    });

</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>SyncIssueVotingActivity</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        
            <div class="editor-label">
                @Html.LabelFor(model => model.AbstractAssignmentID, "AbstractAssignment")
            </div>
            <div class="editor-field">
                @Html.DropDownList("AbstractAssignmentID", String.Empty)
                @Html.ValidationMessageFor(model => model.AbstractAssignmentID)
            </div>

            <h2>Settings</h2>

            <h3>Anonymity of Review</h3>

            <div class="editor-label">
                @Html.LabelFor(model => model.peerReviewActivity.IsAuthorAnonymous)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.peerReviewActivity.IsAuthorAnonymous, new { id = "IsAuthorAnonymous" })
                @Html.ValidationMessageFor(model => model.peerReviewActivity.IsAuthorAnonymous)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.peerReviewActivity.IsReviewersAnonymous)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.peerReviewActivity.IsReviewersAnonymous, new { id = "IsReviewerAnonymous" })
                @Html.ValidationMessageFor(model => model.peerReviewActivity.IsReviewersAnonymous)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.peerReviewActivity.IsReviewersRoleAnonymous)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.peerReviewActivity.IsReviewersRoleAnonymous, new { id = "IsReviewersRoleAnonymous" })
                @Html.ValidationMessageFor(model => model.peerReviewActivity.IsReviewersRoleAnonymous)
            </div>

            <h3>Grading</h3>

            <div class="editor-label">
                @Html.LabelFor(model => model.SetGradePercentOfIssues)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.SetGradePercentOfIssues, new { id = "SetGradePercentOfIssues" })
                @Html.ValidationMessageFor(model => model.SetGradePercentOfIssues)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.SetGradePercentAgreementWModerator)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.SetGradePercentAgreementWModerator, new { id = "SetGradePercentAgreementWModerator" })
                @Html.ValidationMessageFor(model => model.SetGradePercentAgreementWModerator)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.SetGradeManually)
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.SetGradeManually, new { id = "SetGradeManually" })
                @Html.ValidationMessageFor(model => model.SetGradeManually)
            </div>
            <div class="editor-label">
                Add to Gradebook
            </div>
            <div class="editor-field">
                <input type="checkbox" id="add_to_gradebook" checked="checked" />
            </div>
    
            <div id="grade_options" class="indented_options">
                <div class="editor-field">
                    Worth
                    @Html.TextBoxFor(model => model.PointsPossible, new { id = "points_possible", size = 3 })
                    Points in Category <span id="grade_category_label"></span>

                    @Html.ValidationMessageFor(model => model.PointsPossible)
                </div>
        

                <h3>Late Policy</h3>
    
                <p>
                    Students may submit assignments up to @Html.TextBoxFor(model => model.MinutesLateWithNoPenalty, new { size = 3 })
                    minutes late at no penalty, after which a penalty of @Html.TextBoxFor(model => model.PercentPenalty, new { size = 3 })
                    percent per @Html.TextBoxFor(model => model.HoursLatePerPercentPenalty, new { size = 3 })
                    hours late will be applied.<br />
                    @Html.ValidationMessageFor(model => model.MinutesLateWithNoPenalty)
                    @Html.ValidationMessageFor(model => model.PercentPenalty)
                    @Html.ValidationMessageFor(model => model.HoursLatePerPercentPenalty)
                </p>
    
    
                <p>
                    Assignments that are submitted more than @Html.TextBoxFor(model => model.HoursLateUntilZero, new { size = 3 })
                    hours after the due date and time will receive an automatic 0.<br />
                    @Html.ValidationMessageFor(model => model.HoursLateUntilZero)
                </p>

            </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

