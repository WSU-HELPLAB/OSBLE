@using OSBLE.Controllers;
@using OSBLE.Models.Gradables;
@{
    Layout = null;
}
<table id="grades" class="gradebook">
        <tr>
            <th id="th-1">
                &nbsp
            </th>
            @foreach (Gradable item in ViewBag.Gradables)
            {
                <th id="@item.ID" onclick="changeHeaderName(this)">@item.Name<div id="cntnr" class="thButton">
                    <button class="dropdown" id="1" onclick="ShowHide(this);">
                    </button>
                </div>
                </th>
            }
        </tr>
        <tr>
            <th id="th-2">
                Points Possible
            </th>
            @foreach (Gradable item in ViewBag.Gradables)
            {
                <td onclick="cellGainsFocus(this)">@item.PossiblePoints
                </td>   
            }
        </tr>
        <tr>
            <th id="th-3">
                Students
            </th>
            @foreach (Gradable item in ViewBag.Gradables)
            {
                <td>
                    &nbsp
                </td>   
            }
        </tr>
        <!--loop through all users -->
        @foreach (OSBLE.Models.Users.UserProfile user in ViewBag.Users)
        {        
            <tr>
                <td id="@user.ID" >@user.LastName, @user.FirstName
                </td>
                @foreach (Gradable gradable in ViewBag.Gradables)
                {
                    <!--TODO: Add unique identifiers for use in AJAX calls to each table cell -->
                
                    <td onclick="cellGainsFocus(this)">
                        @{var gradableQuery = from g in ViewBag.Grades as IEnumerable<GradableScore>
                                              where g.GradableID == gradable.ID && g.UserProfileID == user.ID
                                              select g;
                          //use the stored score if possible.  Otherwise, just use a "0"
                          if (gradableQuery.Count() > 0)
                          {
                            @gradableQuery.First().Score
                          }
                          else
                          {
                              //Razor didn't like me using just a "0" so I had to wrap it inside String.Format
                            @String.Format("{0}", 0)
                          }
                        }
                    </td> 
                }
            </tr>
        }
    </table>