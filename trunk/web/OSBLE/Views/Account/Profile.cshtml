@using OSBLE.Models.Users
@using OSBLE.Models.Courses

@model OSBLE.Models.ChangePasswordModel

@{
    ViewBag.Title = "Profile";
}

<h2>Upload Profile Picture</h2>
@Helpers.ProfilePicture(Url.Action("ProfilePicture"))

<div id="picture_upload">
@using (Html.BeginForm("UploadPicture", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="file" name="file" />
    <input type="submit" value="Upload Picture" />
    <input name="remove" type="submit" value="Remove Picture" id="remove_picture" onclick="return confirm('Sure you want to remove your profile picture?')" />
}
</div>
   
<p><em>Supported Formats: BMP, GIF, EXIF, JPG, PNG and TIFF</em></p>

<h2>Change Password</h2>
<p>
    Use the form below to change your password. 
</p>
<p>
    New passwords are required to be a minimum of @Membership.MinRequiredPasswordLength characters in length.
</p>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "Password change was unsuccessful. Please correct the errors and try again.")
    <div>

            <div class="editor-label">
                @Html.LabelFor(m => m.OldPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.OldPassword)
                @Html.ValidationMessageFor(m => m.OldPassword)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.NewPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.NewPassword)
                @Html.ValidationMessageFor(m => m.NewPassword)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>

            <p>
                <input type="submit" value="Change Password" />
            </p>
    </div>
}

<h2>Course and Community Menu</h2>

<p>Hidden courses/communities will not appear in your course list or your activity feed and must be unchecked to access again.</p>
<p>Your default course will be the active course each time you log on to OSBLE.</p>

@using (Html.BeginForm("UpdateMenu","Account"))
{
    @Html.ValidationSummary()
<div>

<table>
    <tr>
        <th>Hidden</th>
        <th>Name</th>
        <th></th>
    </tr>
    @foreach (CoursesUsers cu in ViewBag.CurrentCourses) {
        <tr>
            <td>
            <input type="checkbox" value="True" name="cu_hidden_@(cu.CourseID)" @if(cu.Hidden) {<text>checked="checked"</text>} />
            </td>
            <td>
                <small>
                @if (cu.Course is Course) {
                    <text>Course</text>
                } else {
                    <text>Community</text>
                }
                </small>
                @Helpers.CourseTag(cu.Course) &mdash; @cu.Course.Name (@cu.CourseRole.Name)
            </td>
            <td>
                @if (cu.CourseID == ViewBag.CurrentUser.DefaultCourse) {
                    <text>Default</text>
                } else {
                    <text>@Html.ActionLink("Set As Default", "SetDefault", new { id=cu.CourseID })</text>
                }
            </td>
        </tr>
    }
</table>
<p>
    <input type="submit" value="Update Menu" />
</p>
</div>
}