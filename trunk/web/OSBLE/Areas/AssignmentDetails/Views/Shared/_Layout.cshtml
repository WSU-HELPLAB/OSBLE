@using OSBLE.Models.Assignments
@using OSBLE.Areas.AssignmentDetails.ViewModels
@using OSBLE.Models.Courses;
@using OSBLE.Resources
@model AssignmentDetailsViewModel
@{
    ViewBag.Title = "Assignment Details";
    DynamicDictionary headerData = Model.HeaderBuilder.BuildHeader(Model.CurrentAssignment);
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Header
{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/AssignmentDetails/Content/js/Home.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/AssignmentDetails/Content/css/Home.css")" type="text/css" rel="Stylesheet" />
    @RenderSection("Header", false)
}
<h1>@Model.CurrentAssignment.AssignmentName.ToFirstCharUpper()</h1>
@if (Model.Client.AbstractRole.CanModify)
{
    <ul id="AssignmentLinksList">
        <li>
            @{string actionUrl = Url.Action(
                                    "ToggleDraft",
                                    "Home",
                                    new
                                    {
                                        assignmentId = Model.CurrentAssignment.ID
                                    }
                                   );
              string linkTitle = "Unpublish Assignment";
              HelperResult linkImg = Helpers.UnPublishButton();
            }
            @if (Model.CurrentAssignment.IsDraft == true)
            {
                linkTitle = "Publish Assignment";
                linkImg = Helpers.PublishButton();
            }
            <a href="@actionUrl" title="@linkTitle">@Html.Raw(linkImg.ToHtmlString())</a>
        </li>
        <li><a title="Click to Edit" href="@Url.Action("Index", "Home", new { area = "AssignmentWizard", assignmentId = Model.CurrentAssignment.ID })">@Helpers.EditButton()</a>
        </li>
        <li>
            @{
            string deleteLink = Url.Action("DeleteAssignment", new { assignmentId = Model.CurrentAssignment.ID });
            }
            <a 
        id="DeleteAssignmentLink"
        title="Click to Delete" 
        class="pointerOnMouseOver" 
        href="@deleteLink"
        >@Helpers.DeleteButton()</a> </li>
    </ul>
}
<table id="AssignmentDetailsTable">
    <tr id="AssignmentDetailsTableFirstRow">
        <th>
            Grading:
        </th>
        <td>
            Worth @Model.CurrentAssignment.PointsPossible in &quot;@Model.CurrentAssignment.Category.Name&quot;
            category
        </td>
    </tr>
    <tr>
        <th>
            Description:
        </th>
        <td>@Model.CurrentAssignment.AssignmentDescription
        </td>
    </tr>
    <tr>
        <th>
            Type:
        </th>
        <td>@Model.CurrentAssignment.Type.Explode()
        </td>
    </tr>
    <tr>
        <th>
            Released:
        </th>
        <td>@Model.CurrentAssignment.ReleaseDate
        </td>
    </tr>
    @RenderSection("AssignmentDetails", true)
</table>
@if (Model.Client.AbstractRole.CanGrade)
{
    <table  id="StudentsTable">
        <tr>
            <th>
                Name
            </th>
            @foreach (string key in Model.TableColumnHeaders.Keys)
            {
                <th>@Model.TableColumnHeaders[key]
                </th>
            }
        </tr>
        @RenderSection("TableData", false)
    </table>
    
    <!--Element for modal confirmation box-->
    <div id="confirmDeleteWindow" style="display: none;" title="Delete Assignment">
        <div id="confirmForm">
            Are you sure you want to delete this assignment?
            @using (Html.BeginForm("DeleteAssignment", "Home", new { assignmentId = Model.CurrentAssignment.ID }, FormMethod.Post))
            {
                <div class="yesAndNoDiv">
                    <input value="Delete" type="submit" />
                    <input value="Cancel" type="button" onclick="hideConfirmDeleteWindow()" />
                </div>
            }
        </div>
    </div>
    
    <!-- Pop-up window for editing late percentage -->
    <div id="EditLatePercentWindowID" style="display: none;" title="Edit Score">
        <input type="radio" id="radioBtn1" name="group1" />
        Use default late penalty<br />
        <input type="radio" id="radioBtn2" name="group1" />
        Use a custom late penalty of
        <input size="5" id="manualLatePen" />%<br />
        <td>
            <text id="latePenErrorText" style="color: Red; float: left; font-size: smaller"></text>
            <br />
            <div style="float: right">
                <input type="button" onclick="setManualLatePen();" value="Apply Changes" />
                <input type="button" onclick="closeManualLatePenWindow();" value="Cancel" />
            </div>
        </td>
    </div>
}
else
{
    //AC: should never use, but required by MVC3 to render
    <text>@RenderSection("TableData", false)</text>
}
