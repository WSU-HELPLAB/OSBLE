@using OSBLE.Models.Assignments
@using OSBLE.Areas.AssignmentDetails.ViewModels
@using OSBLE.Models.Courses;
@using OSBLE.Resources
@model AssignmentDetailsViewModel
@{
    ViewBag.Title = "Assignment Details";
    DynamicDictionary headerData = Model.HeaderBuilder.BuildHeader(Model.CurrentAssignment);
    
}
@section AssignmentDetails
{
    @foreach (string view in Model.HeaderViews)
    {
        string viewLocation = string.Format("HeaderBuilder/{0}", view);
        @Html.Partial(viewLocation, headerData);
    }
}
@section TableData
{
    @if (Model.Client.AbstractRole.CanGrade)
    {

        var teams = from t in Model.CurrentAssignment.PreceedingAssignment.AssignmentTeams
                    orderby t.Team.Name ascending
                    select t;
        
        foreach (IAssignmentTeam assignmentTeam in teams)
        {
            if (assignmentTeam.Team.TeamMembers.Count() > 1)
            {
                <tr>
                    <th class="TeamHeader" colspan="6">
                        @{string actionLink = Url.Action("CreateTeam", "Mail", new { area = "", teamID = assignmentTeam.Team.ID });
                        }
                        <a href="@actionLink" title="Email this team" >@Helpers.MailButton()</a>
                        @assignmentTeam.Team.Name - 
                        @Html.ActionLink("View Evaluations", "TeacherTeamEvaluation", "Assignment", new { precedingTeamId = assignmentTeam.TeamID, TeamEvaluationAssignmentId = Model.CurrentAssignment.ID, area = "" }, new { })
                    </th>
                </tr>
            }

            foreach (TeamMember member in assignmentTeam.Team.TeamMembers.OrderBy(t => t.CourseUser.DisplayName()).ToList())
            {
                AssignmentTeam singleUserAssignmentTeam = new AssignmentTeam();
                singleUserAssignmentTeam.Team = new Team();
                singleUserAssignmentTeam.Team.TeamMembers.Add(member);
                singleUserAssignmentTeam.Team.Name = member.CourseUser.DisplayName(Model.Client.AbstractRole);
                singleUserAssignmentTeam.TeamID = member.TeamID;
                singleUserAssignmentTeam.Assignment = assignmentTeam.Assignment;
                singleUserAssignmentTeam.AssignmentID = assignmentTeam.AssignmentID;             
        <tr>
            <td>
                @{string actionLink = Url.Action("CreateUser", "Mail", new { area = "", courseUserId = member.CourseUser.ID });
                }
                <a href="@actionLink" title="Email this user">@Helpers.MailButton()</a>
                @member.CourseUser.DisplayNameFirstLast(Model.Client.AbstractRole)
            </td>
            @foreach (string view in Model.TableColumnHeaders.Keys)
            {
                DynamicDictionary tableData = Model.TeamTableBuilders[assignmentTeam].BuildTableForTeam(singleUserAssignmentTeam);
                string viewLocation = string.Format("TableBuilder/{0}", view);
                @Html.Partial(viewLocation, tableData);
            }
        </tr>
            }
        }
    }
}
