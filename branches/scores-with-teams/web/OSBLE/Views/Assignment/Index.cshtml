@using OSBLE.Models
@using OSBLE.Models.Assignments
@model OSBLE.Models.ViewModels.AssignmentListViewModel

<script src="@Url.Content("~/Scripts/osble.assignment_list.js")" type="text/javascript"></script>
<script type="text/javascript">
@{
    //Chris wanted some sort of notification that a student's submission was received (ticket #406).  Pretty ugly at the moment,
    //but it'll do
    if (ViewBag.SubmissionReceived)
    {
        @Html.Raw("alert(\"Your submission was successfully received.\");");
    }

    ViewBag.Title = "Assignments";
}
</script>




<h2>Assignments @Helpers.CreateToolTip(ToolTips.AssignmentTitle) </h2>

@if (ViewBag.ActiveCourse.AbstractRole.CanModify)
{
    <a href="@Url.Action("Index", "Home", new { area = "AssignmentWizard"})" class="add_link" id="assignment_create_button">@Helpers.AddButton() Create New Assignment</a><br /><br />
}


@if (ViewBag.PastAssignments.Count == 0 &&
     ViewBag.PresentAssignments.Count == 0 &&
     ViewBag.FutureAssignments.Count == 0)
{ 
    <h4>No Active Assignments</h4>
}

@if((ViewBag.PastAssignments.Count > 0 ||
     ViewBag.PresentAssignments.Count > 0 ||
     ViewBag.FutureAssignments.Count > 0) || ViewBag.ActiveCourse.AbstractRole.CanModify && ViewBag.DraftAssignments.Count > 0) 
{
    ViewBag.AssignmentList = 1;
    <table class="assignTable" cellspacing="0">

        @if (ViewBag.ActiveCourse.AbstractRole.CanModify)
        {
            <th colspan="2">Assignment</th>
        }
        else
        {
            <th>Assignment</th>
        }
        
        <th>Release Date</th>
        <th>Due Date</th>
        @if (ViewBag.ActiveCourse.AbstractRole.CanSubmit)
        {
            <th>Grade</th>
            <th>Latest Submission</th>
        }
        else
        {
            <th>Submissions</th>
        }
        @if (ViewBag.PastAssignments.Count > 0)
        {
            //Needed a way to put blank space in a table, only when the previous assignment category had
            <tr><td style="padding-bottom:10px"></td></tr>
            <tr><td colspan="100%" style="padding-right:0" class="osbleColorBold">Past (@ViewBag.PastAssignments.Count)</td></tr>
        }
        @foreach (Assignment a in ViewBag.PastAssignments)
        {
            
            <tr class="checkeredRow">
                @if (ViewBag.ActiveCourse.AbstractRole.CanModify)
                {
                    <td style="padding-right:0"><!--Cell for icons-->
                    <a title="Click to Unpublish"  class="pointerOnMouseOver" onclick="toggleDraft(@a.ID)">@Helpers.UnPublishButton()</a>
                    <a title="Click to Edit" href="@Url.Action("Index", "Home", new { area = "AssignmentWizard", assignmentId = a.ID })">@Helpers.EditButton()</a>
                    <a title="Click to Delete" class="pointerOnMouseOver" onclick="openConfirmDeleteWindow(@a.ID)">@Helpers.DeleteButton()</a>
                    </td>
                }
                <td> <!--Cell for name-->
                    @Html.ActionLink(a.AssignmentName, "AssignmentDetails", "Assignment", new { a.ID }, null)
                </td>
                <td>@a.ReleaseDate.ToShortDateString()</td>
                <td>@a.DueDate.ToShortDateString()</td>
                @if (ViewBag.ActiveCourse.AbstractRole.CanSubmit)
                {
                    <td><!--Td for grade-->
                        @if (a.HasRubric)
                        {
                            string gradeToDisplay = ViewBag.SubmissionInfoDictionary[a.ID].Item2;
                            @Html.ActionLink(gradeToDisplay, "View", "Rubric", new { assignmentId = a.ID, teamId = ViewBag.SubmissionInfoDictionary[a.ID].Item3 }, new { });
                        }
                        else
                        {
                            @ViewBag.SubmissionInfoDictionary[a.ID].Item2
                        }
                    </td>
                    //if a student, allow to view last submission
                    if (ViewBag.SubmissionInfoDictionary[a.ID].Item1 != "No Submission" && a.HasDeliverables)
                    {
                        String display = ViewBag.SubmissionInfoDictionary[a.ID].Item1;
                        AjaxOptions options = new AjaxOptions()
                        {
                            LoadingElementId = "Loading",
                            HttpMethod = "Get",
                            UpdateTargetId = "submitFiles",
                            OnComplete = "SubmissionLoaded"
                        };    
                    <td> <!--TD for displaying latest submission and resubmit-->
                        @(Html.ActionLink(display, "getCurrentUsersZip", "FileHandler", new { assignmentID = a.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" }))  
                        @Ajax.ActionLink("Resubmit", "Create", "Submission", new { id = a.ID }, options, new object())
                    </td>
                    }
                    else if (a.HasDeliverables)
                    {
                        <td>No Submission Received</td>
                    }
                    else
                    {
                        <td>No Deliverables</td>
                    }
                }
                @if (ViewBag.ActiveCourse.AbstractRole.CanModify)
                {
                    if (a.HasDeliverables)
                    {
                        //Teacher with deliverables, download all option should be here
                        <td>@Html.ActionLink("Download all", "GetAllSubmissionsForActivity", "FileHandler", new { assignmentID = a.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" })</td>
                    }
                    else
                    {
                        <td>No Deliverables</td>
                    }
                }
            </tr>
        }
        
        @if (ViewBag.PresentAssignments.Count > 0)
        {
            if (ViewBag.PastAssignments.Count > 0)
            {
                //Needed a way to put blank space in a table, only when the previous assignment category had
                <tr><td style="padding-bottom:10px"></td></tr>
            }
            <tr><td colspan="100%" class="osbleColorBold">Present (@ViewBag.PresentAssignments.Count)</td></tr>
        }
        @foreach (Assignment a in ViewBag.PresentAssignments)
        {
            
            <tr class="checkeredRow">
                @if (ViewBag.ActiveCourse.AbstractRole.CanModify)
                {
                    <td style="padding-right:0"><!--Cell for icons-->
                    <a title="Click to Unpublish"  class="pointerOnMouseOver" onclick="toggleDraft(@a.ID)">@Helpers.UnPublishButton()</a>
                    <a title="Click to Edit" href="@Url.Action("Index", "Home", new { area = "AssignmentWizard", assignmentId = a.ID })">@Helpers.EditButton()</a>
                    <a title="Click to Delete" class="pointerOnMouseOver" onclick="openConfirmDeleteWindow(@a.ID)">@Helpers.DeleteButton()</a>
                    </td>
                }
                <td> <!--Cell for name-->
                    @Html.ActionLink(a.AssignmentName, "AssignmentDetails", "Assignment", new { a.ID }, null)
                </td>
                <td>@a.ReleaseDate.ToShortDateString()</td>
                <td>@a.DueDate.ToShortDateString()</td>
                @if (ViewBag.ActiveCourse.AbstractRole.CanSubmit)
                {
                    <td><!--Td for grade-->
                        @if (a.HasRubric)
                        {
                            string gradeToDisplay = ViewBag.SubmissionInfoDictionary[a.ID].Item2;
                            @Html.ActionLink(gradeToDisplay, "View", "Rubric", new { assignmentId = a.ID, cuId = ViewBag.SubmissionInfoDictionary[a.ID].Item3 }, new { });
                        }
                        else
                        {
                            @ViewBag.SubmissionInfoDictionary[a.ID].Item2
                        }
                    </td>
                        //if a student, allow to view last submission
                        if (ViewBag.SubmissionInfoDictionary[a.ID].Item1 != "No Submission" && a.HasDeliverables)
                        {

                            String display = ViewBag.SubmissionInfoDictionary[a.ID].Item1;
                            AjaxOptions options = new AjaxOptions()
                            {
                                LoadingElementId = "Loading",
                                HttpMethod = "Get",
                                UpdateTargetId = "submitFiles",
                                OnComplete = "SubmissionLoaded"
                            };    
                        <td> <!--TD for displaying latest submission and resubmit-->
                            @(Html.ActionLink(display, "getCurrentUsersZip", "FileHandler", new { assignmentID = a.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" }))  
                            @Ajax.ActionLink("Resubmit", "Create", "Submission", new { id = a.ID }, options, new object())
                        </td>
                        }
                        else if (a.HasDeliverables)
                        {

                            AjaxOptions options = new AjaxOptions()
                            {
                                LoadingElementId = "Loading",
                                HttpMethod = "Get",
                                UpdateTargetId = "submitFiles",
                                OnComplete = "SubmissionLoaded"
                            }; 
                         <!--TD for first submission-->
                        <td>
                        None.
                        @Ajax.ActionLink("Submit Here", "Create", "Submission", new { id = a.ID }, options, new object())
                        </td>
                        }
                        else
                        {
                        <td>No Deliverables</td>
                        }
                }
                @if (ViewBag.ActiveCourse.AbstractRole.CanModify)
                {
                    if (a.HasDeliverables)
                    {
                        //Teacher with deliverables, download all option should be here
                        <td>@Html.ActionLink("Download all", "GetAllSubmissionsForActivity", "FileHandler", new { assignmentID = a.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" })</td>
                    }
                    else
                    {
                        <td>No Deliverables</td>
                    }
                }
            </tr>
        }
        @if (ViewBag.FutureAssignments.Count > 0)
        {
            if (ViewBag.PastAssignments.Count > 0 || ViewBag.PresentAssignments.Count > 0)
            {
                //Needed a way to put blank space in a table, only when the previous assignment category had
                <tr><td style="padding-bottom:10px"></td></tr>
            }
            <tr><td colspan="100%" style="padding-right:0" class="osbleColorBold">Future (@ViewBag.FutureAssignments.Count)</td></tr>
        }
        @foreach (Assignment a in ViewBag.FutureAssignments)
        {
            
            <tr>
                @if (ViewBag.ActiveCourse.AbstractRole.CanModify)
                {
                    <td style="padding-right:0"><!--Cell for icons-->
                    <a title="Click to Unpublish"  class="pointerOnMouseOver" onclick="toggleDraft(@a.ID)">@Helpers.UnPublishButton()</a>
                    <a title="Click to Edit" href="@Url.Action("Index", "Home", new { area = "AssignmentWizard", assignmentId = a.ID })">@Helpers.EditButton()</a>
                    <a title="Click to Delete" class="pointerOnMouseOver" onclick="openConfirmDeleteWindow(@a.ID)">@Helpers.DeleteButton()</a>
                    </td>
                }
                <td> <!--Cell for name-->
                    @if (ViewBag.ActiveCourse.AbstractRole.CanModify)
                    {
                        @Html.ActionLink(a.AssignmentName, "AssignmentDetails", "Assignment", new { a.ID }, null)
                    }
                    else
                    {
                        @:@a.AssignmentName
                    }
                </td>
                <td>@a.ReleaseDate.ToShortDateString()</td>
                <td>@a.DueDate.ToShortDateString()</td>
                @if (ViewBag.ActiveCourse.AbstractRole.CanSubmit)
                {
                    //Blank cell. Students should not see submission state
                    <td></td>
                }
                @if (ViewBag.ActiveCourse.AbstractRole.CanModify)
                {
                    if (a.HasDeliverables)
                    {
                        //Teacher with deliverables, download all option should be here
                        <td>@Html.ActionLink("Download all", "GetAllSubmissionsForActivity", "FileHandler", new { assignmentID = a.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" })</td>
                    }
                    else
                    {
                        <td>No Deliverables</td>
                    }
                }
            </tr>
        }
        @if (ViewBag.DraftAssignments.Count > 0)
        {
            if (ViewBag.PastAssignments.Count > 0 || ViewBag.PresentAssignments.Count > 0 || ViewBag.FutureAssignments.Count > 0)
            {
                //Needed a way to put blank space in a table, only when the previous assignment category had
                <tr><td style="padding-bottom:10px"></td></tr>
            }
            <tr><td colspan="100%" style="padding-right:0" class="osbleColorBold">Draft (@ViewBag.DraftAssignments.Count)</td></tr>
        }
        
        @foreach (Assignment a in ViewBag.DraftAssignments)
        {
            
            <tr>
                @if (ViewBag.ActiveCourse.AbstractRole.CanModify)
                {
                    <td style="padding-right:0"><!--Cell for icons-->
                    <a title="Click to Publish"  class="pointerOnMouseOver" onclick="toggleDraft(@a.ID)">@Helpers.PublishButton()</a>
                    <a title="Click to Edit" href="@Url.Action("Index", "Home", new { area = "AssignmentWizard", assignmentId = a.ID })">@Helpers.EditButton()</a>
                    <a title="Click to Delete" class="pointerOnMouseOver" onclick="openConfirmDeleteWindow(@a.ID)">@Helpers.DeleteButton()</a>
                    </td>
                }
                <td> <!--Cell for name-->
                    @Html.ActionLink(a.AssignmentName, "AssignmentDetails", "Assignment", new { a.ID }, null)
                </td>
                <td>@a.ReleaseDate.ToShortDateString()</td>
                <td>@a.DueDate.ToShortDateString()</td>
                @if (a.HasDeliverables && ViewBag.ActiveCourse.AbstractRole.CanModify)
                {
                    //Teacher with deliverables, download all option should be here
                    <td>@Html.ActionLink("Download all", "GetAllSubmissionsForActivity", "FileHandler", new { assignmentID = a.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" })</td>
                }
                else
                {
                    <td>No Deliverables</td>
                }
            </tr>
        }
    </table>
}


<script type="text/javascript">


    function toggleDraft(id){
        $.ajax({
            async: false,
            url: "/Assignment/ToggleDraft",
            data: { assignmentID: id },
        });
        window.location.reload(true);
    }

    function create_and_open_downloading_submission_dialog() {

        //create the div that we will then make into a dialog
        $('body').append(
      '<div id="downloading_submission_dialog" title="Download Submission"> \
       <p>The zip is being generated and will automatically start downloading when it is ready, please do not leave the page or click the link again</p> \
   </div>');

        //make the div we just created into a dialog box

        $('#downloading_submission_dialog').dialog({
            modal: false,
            autoOpen: true,
            resizable: true,
            width: 350,
            height: 300,
            closeOnEscape: true,
            close: remove_downloading_submission_dialog,
            buttons: { "OK": remove_downloading_submission_dialog }
        });

        $('#downloading_submission_dialog').dialog('open');
        return false;
    }

    function remove_downloading_submission_dialog() {

        //change the dialog back into a normal div (that is what destroy does although it does not destroy the div)
        $('#downloading_submission_dialog').dialog("destroy");

        //then remove the div
        $('#downloading_submission_dialog').remove();
    }


    function SubmissionLoaded() {
        $('#submit_files_dialog').dialog('open');

    }

    /*Functions and variables for deleteAssignment modal box*/
    var assignmentToDeleteID = -1;
    function openConfirmDeleteWindow(assignmentID) {
        assignmentToDeleteID = assignmentID;
        $("#confirmDeleteWindow").dialog({
            modal: true,
            resizable: false,
            width: 310,
            height: 135,
            closeOnEscape: false
        });
    }
   
    function deleteAssignment()
    {
        $.ajax({
            async: false,
            url: "/Assignment/Delete",
            data: { id: assignmentToDeleteID },
        });
        //window.location.reload(true);
    }

   function hideConfirmDeleteWindow() {
        $("#confirmDeleteWindow").dialog('close');
    }
</script>

<!--Element for modal confirmation box-->
<div id="confirmDeleteWindow" style="display:none;" title="Delete Assignment">
    <form id="confirmForm" onsubmit="deleteAssignment();">
        <text>Are you sure you want to delete that assignment?</text>
        <div class="yesAndNoDiv">
            <input value="Delete" type="submit"/>
            <input value="Cancel" type="button" onclick="hideConfirmDeleteWindow()" />
        </div>
    </form>
</div>

<!--Elements for submission modal box and loading message-->
<text id="Loading" style="display:none"> <br />Please Wait...</text>
<div id="submit_files_dialog" style="display:none">
    <div id= "submitFiles"></div>
    <script type="text/javascript">
        $(function () {
            $('#submit_files_dialog').dialog(
            {
                modal: true,
                autoOpen: false,
                height: 600,
                width: 500
            });
        });
    </script>
    </div>
</div>