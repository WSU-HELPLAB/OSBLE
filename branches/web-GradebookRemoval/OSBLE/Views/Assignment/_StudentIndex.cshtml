@using OSBLE.Models
@using OSBLE.Models.Assignments
<table class="assignTable" cellspacing="0">
    <th style="font-size: larger">
        Assignment
    </th>
    <th style="font-size: larger">
        Due Date
    </th>
    <th style="font-size: larger">
        Grade
    </th>
    <th style="font-size: larger">
        Latest Submission
    </th>
    @{
        List<TeamEvaluation> teamEvals = (from te in ViewBag.TeamEvaluations as IEnumerable<TeamEvaluation>
                                          select te).ToList();

        //MG & KD: Assignments are in order based on:: past & present -> future -> draft. The flags below are used to avoid duplicate headers for each category
        bool futureFlag = false, presentFlag = false, pastFlag = false;
        foreach (Assignment assignment in ViewBag.Assignments)
        {
            if (assignment.DueDate < ViewBag.CurrentDate && !pastFlag)
            {
                //PAST
                pastFlag = true;
        <tr>
            <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                Past (@ViewBag.PastCount)
            </td>
        </tr>
            }
            else if (assignment.ReleaseDate > ViewBag.CurrentDate && !futureFlag)
            {
                //FUTURE
                futureFlag = true;
                if (pastFlag || presentFlag)
                {
        <tr>
            <td style="padding-bottom: 10px">
            </td>
        </tr>
                }
        <tr>
            <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                Future (@ViewBag.FutureCount)
            </td>
        </tr>

            }
            else if (assignment.DueDate >= ViewBag.CurrentDate && !presentFlag)
            {
                //PRESENT
                presentFlag = true;
                if (pastFlag)
                {
        <tr>
            <td style="padding-bottom: 10px">
            </td>
        </tr>
                }
        <tr>
            <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                Present (@ViewBag.PresentCount)
            </td>
        </tr>
            }

        <tr class="checkeredRow">
            <td>
                <!--Cell for name-->
                @if (futureFlag)
                {
                    @assignment.AssignmentName
                }
                else
                {
                    @Html.ActionLink(assignment.AssignmentName, "Index", "Home", new { area = "AssignmentDetails", assignmentId = assignment.ID }, null)
                }
            </td>
            <td>@assignment.DueDate.ToShortDateString() @assignment.DueDate.ToShortTimeString()
            </td>
            <td>
                <!--Td for grade-->
                @if (futureFlag)
                {
                    /*show nothing if future assignment*/
                }
                else if (assignment.HasRubric && ViewBag.SubmissionInfoDictionary[assignment.ID].Item2 != "No Grade")
                {
                    string gradeToDisplay = ViewBag.SubmissionInfoDictionary[assignment.ID].Item2;
                    @Html.ActionLink(gradeToDisplay, "View", "Rubric", new { assignmentId = assignment.ID, cuId = ViewBag.CourseUser.ID }, new { });
                }
                else
                {
                    @ViewBag.SubmissionInfoDictionary[assignment.ID].Item2
                }
            </td>
            @*if a student, allow to view last submission*@
            @if (futureFlag)
            {
                <td>
                </td>
            }
            else if (ViewBag.SubmissionInfoDictionary[assignment.ID].Item1 != "No Submission" && assignment.HasDeliverables)
            {
                String display = ViewBag.SubmissionInfoDictionary[assignment.ID].Item1;
                AjaxOptions options = new AjaxOptions()
                {
                    LoadingElementId = "Loading",
                    HttpMethod = "Get",
                    UpdateTargetId = "submitFiles",
                    OnComplete = "SubmissionLoaded"
                };
                <td>
                    <ul id="SubmissionItems">
                        <li>
                            @(Html.ActionLink(display, "getCurrentUsersZip", "FileHandler", new { assignmentID = assignment.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" }))
                        </li>
                        <li>
                            @Ajax.ActionLink("Resubmit", "Create", "Submission", new { id = assignment.ID }, options, new object())
                        </li>
                        @if (ViewBag.SubmissionReceived && assignment.ID == ViewBag.SubmissionReceivedAssignmentID)
                        {
                            <li id="SubmissionReceivedText">Submission received</li>   
                        }
                    </ul>

                    @*
                    <!--TD for displaying latest submission and resubmit-->
                    @(Html.ActionLink(display, "getCurrentUsersZip", "FileHandler", new { assignmentID = assignment.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" }))
                    @Ajax.ActionLink("Resubmit", "Create", "Submission", new { id = assignment.ID }, options, new object())
                    @if (assignment.ID == ViewBag.SubmissionReceivedAssignmentID)
                    {
                        
                    }
                    *@
                </td>
            }
            else if (assignment.HasDeliverables || assignment.AssignmentTypeID == 4)
            {
                if (assignment.AssignmentTypeID == 4)
                {
                    bool found = false;
                    foreach (TeamEvaluation te in teamEvals)
                    {
                        if (te.TeamEvaluationAssignmentID == assignment.ID)
                        {
                            found = true;
                <td>
                    @Html.ActionLink("View/Edit Team Evaluation", "StudentTeamEvaluation", "Assignment", new { assignmentId = assignment.ID }, new { })
                </td>
                            break;
                        }

                    }
                    if (found == false)
                    {
                <td>
                    @Html.ActionLink("Submit Team Evaluation", "StudentTeamEvaluation", "Assignment", new { assignmentId = assignment.ID }, new { })
                </td>
                    }
                }
                else
                {
                    AjaxOptions options = new AjaxOptions()
                    {
                        LoadingElementId = "Loading",
                        HttpMethod = "Get",
                        UpdateTargetId = "submitFiles",
                        OnComplete = "SubmissionLoaded"
                    };
                <!--TD for first submission-->
                <td>
                    None.
                    @Ajax.ActionLink("Submit Here", "Create", "Submission", new { id = assignment.ID }, options, new object())
                </td>
                }
            }
            else
            {
                <td>
                    No Deliverables
                </td>
            }
        </tr>
        }
    }
</table>
