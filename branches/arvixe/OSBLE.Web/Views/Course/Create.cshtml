
@model OSBLE.Models.Courses.Course

@using OSBLE.Models


@{
    ViewBag.Title = "Create Course";
}

<h2>Create Course</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/areas/AssignmentWizard/Content/js/basics.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/osble.courses.js")" type="text/javascript"></script>

@using (Html.BeginForm("Create", "Course", FormMethod.Post, new { id = "course_submit" }))
{
    @Html.ValidationSummary(true)

    <input id="utc-offset" name="utc-offset"  value="" type="hidden"/>
    
    <h3>Course Information</h3>
    
    <table>
        <tr>
        
        <td>
        <div class="editor-label">
            @Html.LabelFor(model => model.Prefix)
            @Helpers.CreateToolTip(ToolTips.CoursePrefix)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Prefix, new { size = 6 })
        </div>
        </td>

        <td>
        <div class="editor-label">
            @Html.LabelFor(model => model.Number)
            @Helpers.CreateToolTip(ToolTips.CourseNumber)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Number, new { size = 4 })
        </div>
        </td>
        <td>
            <div class="editor-label">
            @Html.LabelFor(model => model.Name)
            @Helpers.CreateToolTip(ToolTips.CourseName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
        </div>

        </td>

        </tr>

        <tr>
        
        <td>
        <div class="editor-label">
            @Html.LabelFor(model => model.Semester)
            @Helpers.CreateToolTip(ToolTips.CourseTerm)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Semester, new { size = 6 })
            
        </div>
        </td>

        <td>

        <div class="editor-label">
            @Html.LabelFor(model => model.Year)
            @Helpers.CreateToolTip(ToolTips.CourseYear)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Year, new { size = 4 })
            
        </div>

        </td>

        </tr>
    </table>
    
    <h3>Course Schedule</h3>
    
    <table>
    <tr>
        <td>
            <div class="editor-label">
            @Html.LabelFor(model => model.StartDate, "Start Date")
            @Helpers.CreateToolTip(ToolTips.CourseStartDate)

        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartDate)<br />
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>
        </td>
        <td>
        <div class="editor-label">
            @Html.LabelFor(model => model.EndDate, "End Date")
            @Helpers.CreateToolTip(ToolTips.CourseEndDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EndDate)<br />
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>
        </td>
    </tr>
    
    </table>
    <h4>Course Timezone</h4>
    <div id="course_timezone">
        <select id="timezone_data" name="course_timezone">
            <option value="-12">(GMT -12:00) Eniwetok, Kwajalein</option>
            <option value="-11">(GMT -11:00) Midway Island, Samoa</option>
            <option value="-10">(GMT -10:00) Hawaii</option>
            <option value="-9">(GMT -9:00) Alaska</option>
            <option value="-8">(GMT -8:00) Pacific Time (US &amp; Canada)</option>
            <option value="-7">(GMT -7:00) Mountain Time (US &amp; Canada)</option>
            <option value="-6">(GMT -6:00) Central Time (US &amp; Canada), Mexico City</option>
            <option value="-5">(GMT -5:00) Eastern Time (US &amp; Canada), Bogota, Lima</option>
            <option value="-4.5">(GMT -4:30) Caracas</option>
            <option value="-4">(GMT -4:00) Atlantic Time (Canada), La Paz, Santiago</option>
            <option value="-3.5">(GMT -3:30) Newfoundland</option>
            <option value="-3">(GMT -3:00) Brazil, Buenos Aires, Georgetown</option>
            <option value="-2">(GMT -2:00) Mid-Atlantic</option>
            <option value="-1">(GMT -1:00 hour) Azores, Cape Verde Islands</option>
            <option value="0" selected="selected">(GMT) Western Europe Time, London, Lisbon, Casablanca, Greenwich</option>
            <option value="1">(GMT +1:00 hour) Brussels, Copenhagen, Madrid, Paris</option>
            <option value="2">(GMT +2:00) Kaliningrad, South Africa, Cairo</option>
            <option value="3">(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg</option>
            <option value="3.5">(GMT +3:30) Tehran</option>
            <option value="4">(GMT +4:00) Abu Dhabi, Muscat, Yerevan, Baku, Tbilisi</option>
            <option value="4.5">(GMT +4:30) Kabul</option>
            <option value="5">(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent</option>
            <option value="5.5">(GMT +5:30) Mumbai, Kolkata, Chennai, New Delhi</option>
            <option value="5.75">(GMT +5:45) Kathmandu</option>
            <option value="6">(GMT +6:00) Almaty, Dhaka, Colombo</option>
            <option value="6.5">(GMT +6:30) Yangon, Cocos Islands</option>
            <option value="7">(GMT +7:00) Bangkok, Hanoi, Jakarta</option>
            <option value="8">(GMT +8:00) Beijing, Perth, Singapore, Hong Kong</option>
            <option value="9">(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk</option>
            <option value="9.5">(GMT +9:30) Adelaide, Darwin</option>
            <option value="10">(GMT +10:00) Eastern Australia, Guam, Vladivostok</option>
            <option value="11">(GMT +11:00) Magadan, Solomon Islands, New Caledonia</option>
            <option value="12">(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka</option>
        </select>
        <span class="field-validation-valid" data-valmsg-for="course_timezone" data-valmsg-replace="true"></span>
    </div>
    
    <h4>Meeting Times @Helpers.CreateToolTip(ToolTips.CourseMeetingTimes) </h4>
    
    <div id="meeting_times">

    </div>
    
    <div id="meetings_after">
    <a href="#" onclick="addMeetingTime(); return false;" title="Add Meeting Time">@Helpers.AddButton()</a>
    </div>
  
   
    <input type="hidden" id="meetings_max" name="meetings_max" value="0" />
    
    <h4>Breaks/Holidays @Helpers.CreateToolTip(ToolTips.CourseBreaks) </h4>

    <div id="breaks">
    </div>
    
    <div id="breaks_after">
    <a href="#" onclick="addBreak(); return false;" title="Add Break Time">@Helpers.AddButton()</a>
    </div>
        
    <input type="hidden" id="breaks_max" name="breaks_max" value="0" />
    
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.ShowMeetings) @Html.LabelFor(model => model.ShowMeetings) <br />
            @Html.ValidationMessageFor(model => model.ShowMeetings)
        </div>
    
    <h3>Course Settings </h3>
    
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.AllowDashboardPosts) @Html.LabelFor(model => model.AllowDashboardPosts)
            @Helpers.CreateToolTip(ToolTips.CourseStudentPost) <br />
            @Html.ValidationMessageFor(model => model.AllowDashboardPosts)
        </div>

        <div class="editor-field">
            @Html.CheckBoxFor(model => model.AllowDashboardReplies) @Html.LabelFor(model => model.AllowDashboardReplies)
            @Helpers.CreateToolTip(ToolTips.CourseStudentReply) <br />
            @Html.ValidationMessageFor(model => model.AllowDashboardReplies)
        </div>

        <div class="editor-field">
            @Html.CheckBoxFor(model => model.AllowEventPosting, new { onchange = "if($(this).attr('checked')){$('#require_approval').show('highlight');}else{$('#require_approval').hide('highlight');}" }) @Html.LabelFor(model => model.AllowEventPosting)
            @Helpers.CreateToolTip(ToolTips.CourseStudentEvent) <br />
            @Html.ValidationMessageFor(model => model.AllowEventPosting)
        </div>

        <div class="editor-field" id="require_approval" @if (!Model.AllowEventPosting)
                                                        {<text>style="display: none;"</text>}>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            @Html.CheckBoxFor(model => model.RequireInstructorApprovalForEventPosting) @Html.LabelFor(model => model.RequireInstructorApprovalForEventPosting)
            @Helpers.CreateToolTip(ToolTips.CourseInstructorEventApproval) <br />
            @Html.ValidationMessageFor(model => model.RequireInstructorApprovalForEventPosting)
        </div>

        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Inactive) @Html.LabelFor(model => model.Inactive) 
            @Helpers.CreateToolTip(ToolTips.CourseInactive) <br />
            @Html.ValidationMessageFor(model => model.Inactive)
        </div>


        <br />
        <div class="editor-field">
            @Html.LabelFor(model => model.CalendarWindowOfTime)
            @Html.TextBoxFor(model => model.CalendarWindowOfTime, new { size = 3 })
            @Helpers.CreateToolTip(ToolTips.CourseCalendarEvents) 
        </div>
        
    <h3>Default Late Policy @Helpers.CreateToolTip(ToolTips.CourseLatePolicy) </h3>
    
    <p>
        Students may submit assignments up to @Html.TextBoxFor(model => model.MinutesLateWithNoPenalty, new { size = 3 })
        minutes late at no penalty, after which a penalty of @Html.TextBoxFor(model => model.PercentPenalty, new { size = 3 })
        percent per @Html.TextBoxFor(model => model.HoursLatePerPercentPenalty, new { size = 3 })
        hours late will be applied.<br />
        @Html.ValidationMessageFor(model => model.MinutesLateWithNoPenalty)
        @Html.ValidationMessageFor(model => model.PercentPenalty)
        @Html.ValidationMessageFor(model => model.HoursLatePerPercentPenalty)
    </p>
    
    
    <p>
        Assignments that are submitted more than @Html.TextBoxFor(model => model.HoursLateUntilZero, new { size = 3 })
        hours after the due date and time will receive an automatic 0.<br />
        @Html.ValidationMessageFor(model => model.HoursLateUntilZero)
    </p>
  
        <br />
        <p>
            <input type="submit" id="course_submit" value="Create Course" />
        </p>
}

