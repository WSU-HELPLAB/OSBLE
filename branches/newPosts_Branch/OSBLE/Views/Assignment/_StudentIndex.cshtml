@using OSBLE.Models
@using OSBLE.Models.Assignments
<table class="assignTable" cellspacing="0">
    <th style="font-size: larger; padding-right:20px;">
        Assignment
    </th>
    <th style="font-size: larger">
        Due Date
    </th>
    <th style="font-size: larger">
        Available Actions
    </th>
    <th style="font-size: larger">
        Latest Activity
    </th>
    @{
        AjaxOptions options = new AjaxOptions()
        {
            LoadingElementId = "Loading",
            HttpMethod = "Get",
            UpdateTargetId = "submitFiles",
            OnComplete = "SubmissionLoaded"
        };
        
        List<TeamEvaluation> teamEvals = (from te in ViewBag.TeamEvaluations as IEnumerable<TeamEvaluation>
                                          select te).ToList();

        //MG & KD: Assignments are in order based on:: past & present -> future -> draft. The flags below are used to avoid duplicate headers for each category
        bool futureFlag = false, presentFlag = false, pastFlag = false;
        foreach (Assignment assignment in ViewBag.Assignments)
        {
            if (assignment.DueDate < ViewBag.CurrentDate && !pastFlag)
            {
                //PAST
                pastFlag = true;
        <tr>
            <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                Past (@ViewBag.PastCount)
            </td>
        </tr>
            }
            else if (assignment.ReleaseDate > ViewBag.CurrentDate && !futureFlag)
            {
                //FUTURE
                futureFlag = true;
                if (pastFlag || presentFlag)
                {
        <tr>
            <td style="padding-bottom: 10px">
            </td>
        </tr>
                }
        <tr>
            <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                Future (@ViewBag.FutureCount)
            </td>
        </tr>

            }
            else if (assignment.DueDate >= ViewBag.CurrentDate && !presentFlag)
            {
                //PRESENT
                presentFlag = true;
                if (pastFlag)
                {
        <tr>
            <td style="padding-bottom: 10px">
            </td>
        </tr>
                }
        <tr>
            <td colspan="100%" style="padding-right: 0; font-size: large" class="osbleColorBold">
                Present (@ViewBag.PresentCount)
            </td>
        </tr>
            }

        <tr class="checkeredRow">
            <!--Cell for name-->
            <td>
                @if (futureFlag)
                {
                    @assignment.AssignmentName
                }
                else
                {
                    @Html.ActionLink(assignment.AssignmentName, "Index", "Home", new { area = "AssignmentDetails", assignmentId = assignment.ID }, null)
                }
            </td>

            <!--Cell for duedate-->
            <td>
                @assignment.DueDate.ToShortDateString() @assignment.DueDate.ToShortTimeString()
            </td>

            @{
                DiscussionTeam dt = ViewBag.dtInfo[assignment.ID];
            }

            <!--Cell for Available Actions-->
            <td>
                @if (assignment.Type == AssignmentTypes.DiscussionAssignment || assignment.Type == AssignmentTypes.CriticalReviewDiscussion)
                {
                    //Display "View Discussion" or  "Makew Initial Post" depending on users current initial status.
                    if(dt != null)
                    {
                        @:@Html.ActionLink("View Discussion",
                                        "Index", 
                                        "DiscussionAssignment",
                                           new { assignmentId = assignment.ID, discussionTeamId = dt.ID, area = "" },
                                        new { }
                                    )
                    }
                }
                else if (assignment.HasDeliverables)
                {
                    //Display "Resubmit"  or "Submit" depending on current submission status
                    string submissionString = "Submit";
                    if (ViewBag.SubmissionInfoDictionary[assignment.ID] != "No Submission")
                    {
                        submissionString = "Resubmit";
                    }
                    @Ajax.ActionLink(submissionString, "Create", "Submission", new { id = assignment.ID }, options, new object())
                    
                }
                else if (assignment.Type == AssignmentTypes.TeamEvaluation)
                {
                    if (teamEvals.Any(te => te.TeamEvaluationAssignmentID == assignment.ID))
                    {
                        @Html.ActionLink("View/Edit Team Evaluation", "StudentTeamEvaluation", "Assignment", new { assignmentId = assignment.ID }, new { })
                    }
                    else
                    {
                        @Html.ActionLink("Submit Team Evaluation", "StudentTeamEvaluation", "Assignment", new { assignmentId = assignment.ID }, new { })
                    }
                }
            </td>

            <!--Cell for Latest Activity-->
            <td>
                @if (assignment.Type == AssignmentTypes.DiscussionAssignment || assignment.Type == AssignmentTypes.CriticalReviewDiscussion)
                {
                    //Display "View Discussion" or  "Makew Initial Post" depending on users current initial status.
                    if (dt != null)
                    {
                        int newPosts = dt.GetNewPostsCount(ViewBag.ActiveCourseUser.ID);
                        if (newPosts > 0)
                        {
                            @:@Html.ActionLink(newPosts.ToString() + " New Posts",
                                        "Index",
                                        "DiscussionAssignment",
                                           new { assignmentId = assignment.ID, discussionTeamId = dt.ID, displayNewPosts = true, area = "" },
                                        new { }
                                    )
                        }
                        else
                        {
                            @:No New Posts
                        }
                    }
                }
                else if (assignment.HasDeliverables)
                {
                    //Display "Resubmit"  or "Submit" depending on current submission status
                    if (ViewBag.SubmissionInfoDictionary[assignment.ID] != "No Submission")
                    {
                        string displayValue = "Submitted " + ViewBag.SubmissionInfoDictionary[assignment.ID];
                        @(Html.ActionLink(displayValue, "getCurrentUsersZip", "FileHandler", new { assignmentID = assignment.ID }, new { onclick = "create_and_open_downloading_submission_dialog()" }))
                    }
                }
                
            </td>
        </tr>
        }
    }
</table>
