@using OSBLE.Models.Assignments;
@model Assignment
@Html.ValidationSummary() 
@Html.HiddenFor(m => m.ID)
@Html.HiddenFor(m => m.RubricID)
@Html.HiddenFor(m => m.StudentRubricID)
@Html.HiddenFor(m => m.PrecededingAssignmentID)
@Html.HiddenFor(m => m.CommentCategoryID)
@Html.HiddenFor(m => m.IsDraft)
@Html.HiddenFor(m => m.Type)
@Html.HiddenFor(m => m.IsAnnotatable)
@Html.HiddenFor(m => m.AssociatedEventID)
@section Header
{
    @*<script src="@Url.Content("~/areas/AssignmentWizard/Content/js/basics.js")" type="text/javascript"></script>*@
    <script src="@Url.Content("~/areas/AssignmentWizard/Content/js/assignmentFilesUploader.js")?version=1.1" type="text/javascript"></script>
   
    @* These Files are now included in the layout *@
    @*<script src="../../Scripts/CourseFilesUploader.js?version=1.1" type="text/javascript"></script>
        <script src="../../Scripts/CourseFileManager.js?version=1.1" type="text/javascript"></script>
    *@
}
<input id="utc-offset" name="utc-offset"  value="" type="hidden"/>
<table class="wizard_entry_table">
<tr>
    <th>@Html.LabelFor(m => m.AssignmentName):</th>
    <td class="entryField">@Html.EditorFor(m => m.AssignmentName)</td>
    <td>@Html.ValidationMessageFor(m => m.AssignmentName)</td>
</tr>
    <tr>
        <th>@Html.LabelFor(m => m.AssignmentDescription):</th>
        <td>@Html.TextAreaFor(m => m.AssignmentDescription, new {cols = 50, rows =  4, style="width: 30em"})<img style="vertical-align:top" src="/Content/images/light-bulb-pencil.png" title="Tip: To add links to the description, encapsulate them in wiki-linking format. Example: &quot[url:Click Here|http://www.google.com]&quot" alt="Tip: To add links to the description, encapsulate them in wiki-linking format. Example: &quot[url:Click Here|http://www.google.com]&quot"/></td>
        <td>@Html.ValidationMessageFor(m => m.AssignmentDescription)</td>
</tr>
    <tr>
        <th>Description file (optional):</th>
        <td>
            <input type="hidden" name="temporaryAssignmentID" value="@ViewBag.TemporaryID" />
            <div id="descriptionFilesDIV"></div>
        </td>
    </tr>
    <tr>
        <th>@Html.LabelFor(m => m.Type):</th>
        <td>@Model.Type.Explode()</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <th>@Html.LabelFor(m => m.ReleaseDate):</th>
        <td>@Html.EditorFor(m => m.ReleaseDate) at @Html.EditorFor(m => m.ReleaseTime)</td>
        <td>@Html.ValidationMessageFor(m => m.ReleaseDate)</td>
    </tr>
    <tr>
        <th>@Html.LabelFor(m => m.DueDate):</th>
        <td>@Html.EditorFor(m => m.DueDate) at @Html.EditorFor(m => m.DueTime)</td>
        <td>@Html.ValidationMessageFor(m => m.DueDate)</td>
    </tr>
    <tr>
        <th>@Html.LabelFor(m => m.HoursLateWindow):</th>
        <td>@Html.EditorFor(m => m.HoursLateWindow) hour(s)</td>
        <td>@Html.ValidationMessageFor(m => m.HoursLateWindow)</td>
    </tr>
    <tr>
        <th>@Html.LabelFor(m => m.DeductionPerUnit):</th>
        <td>@Html.EditorFor(m => m.DeductionPerUnit)% per @Html.EditorFor(m => m.HoursPerDeduction) @Html.LabelFor(m => m.HoursPerDeduction)</td>
        <td>@Html.ValidationMessageFor(m => m.DeductionPerUnit)</td>
        <td>@Html.ValidationMessageFor(m => m.HoursPerDeduction)</td>
    </tr>
    <tr>
        <th>Solution file (optional):</th>
        <td><div id="solutionFilesDIV"></div></td>
    </tr>
    </table>

@*ckfrancisco*@
<script>

    //check unique assignment name when assignment text box loses focus
    $("#AssignmentName").on("blur", UniqueAssignmentNameCheck);

    //check unique assignment name when page is submitted
    $(document).ready(function () {
        $("form").submit(function (e) {
            UniqueAssignmentNameCheck();
            var tmp = $("div[data-valmsg-summary='true']").find("li:contains('Please specify an unique assignment name')");
            if (tmp.length) {
                e.preventDefault();
                $("html,body").animate({ scrollTop: 0 }, 100);
            }
        });
    });

    //insert or remove errors if whether the assignment name is unique or not
    function UniqueAssignmentNameCheck() {

        //retrieve old and new assignment name
        var oldname = "@ViewBag.Assignment.AssignmentName";
        var newname = $("#AssignmentName").val();

        //if new name is blank then return
        if (newname == "")
            return true;

        //set vars to the validation summary and assignment name text box elements
        var summaryError = $("div[data-valmsg-summary='true']");
        var txtBoxError = $("span[data-valmsg-for='AssignmentName']");

        $.ajax({
            url: "/Assignment/IsUniqueAssignmentName",
            method: "POST",
            async: false,
            data: { oldName: oldname, newName: newname },
            success: function (result) {

                //execute this statement if a unique name was entered
                if (result == "True") {

                    //modifying validation summary message
                    summaryError.find("li:contains('Please specify an unique assignment name')").remove();

                    if (!summaryError.find("li").length) {
                        summaryError.attr("class", "validation-summary-valid");
                    }

                    //modifying text box message
                    txtBoxError.find("span:contains('Please specify an unique assignment name')").remove();

                    if (!txtBoxError.find("span").length) {
                        txtBoxError.attr("class", "field-validation-valid");

                        $("#AssignmentName").addClass("valid");
                        $("#AssignmentName").removeClass("input-validation-error");
                    }

                    return true;
                }

                //execute this statement if a unique name was NOT entered
                else {

                    //modifying validation summary message
                    summaryError.find("li[style='display:none']").remove();

                    if (!summaryError.find("li:contains('Please specify an unique assignment name')").length) {
                        summaryError.find("ul:first").prepend("<li>Please specify an unique assignment name</li>");
                        summaryError.attr("class", "validation-summary-errors");
                    }

                    //modifying text box message
                    if (!txtBoxError.find("span:contains('Please specify an unique assignment name')").length) {
                        txtBoxError.prepend("<span for='AssignmentName'>Please specify an unique assignment name</span>");
                        txtBoxError.attr("class", "field-validation-error");

                        $("#AssignmentName").addClass("input-validation-error");
                        $("#AssignmentName").removeClass("valid");
                    }

                    return false;
                }
            }
        });
    }
</script>

<script>
    // Call the update function to get file listing and put in upload controls
    assignmentfilemanager_update(@ViewBag.TemporaryID);
</script>